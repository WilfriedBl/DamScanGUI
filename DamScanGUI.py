"""GUI-front-end for DamScan & DamCompare version 1.4.0 by Juha Lintula """
__version__ = "0.1.4"

import tkinter.ttk as ttk
# GUI module generated by PAGE version 4.9
# In conjunction with Tcl version 8.6
#    Oct 07, 2017 10:30:43 PM
from tkinter import *

import DamScanGUI_support


def vp_start_gui():
    '''Starting point when module is the main routine.'''
    global val, w, root
    root = Tk()
    analysis_type = DamScanGUI_support.set_Tk_var()

#     if int(rbtn_verbose_gui.get()) > 0:
#     print('Func. vp_start_gui() line:', getframeinfo(currentframe()).lineno, "Var. analysis_type:", analysis_type)  # for debugging

    top = Analyze_Daminion_Catalog (root)       # Selecting the appropriate tab of the notebook
    tabs = top.tabs                             # !!!
    if analysis_type =='Compare':
        tabs.select(top.tabs_t2)                # !!
    else:
        tabs.select(top.tabs_t1)
    DamScanGUI_support.init(root, top)

    root.mainloop()


w = None


def create_Analyze_Daminion_Catalog(root, *args, **kwargs):
    '''Starting point when module is imported by another program.'''
    global w, w_win, rt
    rt = root
    w = Toplevel(root)
    DamScanGUI_support.set_Tk_var()
    top = Analyze_Daminion_Catalog (w)
    DamScanGUI_support.init(w, top, *args, **kwargs)
    return (w, top)

def destroy_Analyze_Daminion_Catalog():
    global w
    w.destroy()
    w = None


class Analyze_Daminion_Catalog:
    def __init__(self, top=None):
        '''This class configures and populates the toplevel window.
           top is the toplevel containing window.'''
        _bgcolor = '#d9d9d9'  # X11 color: 'gray85'
        _fgcolor = '#000000'  # X11 color: 'black'
        _compcolor = '#b6bbf9'  # Closest X11 color: 'LightSteelBlue2'
        _ana1color = '#ddf9b6'  # Closest X11 color: 'LemonChiffon2'
        _ana2color = '#f9d2b6'  # Closest X11 color: '{peach puff}'
        font10 = "-family {Segoe UI} -size 10 -weight normal -slant roman -underline 0 -overstrike 0"
        font11 = "-family {Segoe UI} -size 11 -weight bold -slant roman -underline 0 -overstrike 0"
        font12 = "-family {Segoe UI} -size 9 -weight bold -slant roman -underline 0 -overstrike 0"
        font13 = "-family {Segoe UI} -size 8 -weight bold -slant roman -underline 0 -overstrike 0"
        font14 = "-family {Segoe UI} -size 11 -weight bold -slant roman -underline 0 -overstrike 0"
        font15 = "-family {Segoe UI} -size 10 -weight bold -slant roman -underline 0 -overstrike 0"
        font16 =  "-family {Segoe UI} -size 8 -weight normal -slant roman -underline 0 -overstrike 0"
        self.style = ttk.Style()
        if sys.platform == "win32":
            self.style.theme_use('winnative')
        self.style.configure('.', background=_bgcolor)
        self.style.configure('.', foreground=_fgcolor)
        self.style.configure('.', font="TkDefaultFont")
        self.style.map('.', background=[('selected', _compcolor), ('active', _ana2color)])

        self.openfold_gif = PhotoImage(file=sys.path[0]+"\\openfold.gif")           # !!!

        top.geometry("750x820+660+113")
        top.title("Analyze Daminion Catalog")
        top.configure(relief="sunken")
        top.configure(background="#d9d9d9")
        top.configure(highlightbackground="#ffffff")
        top.configure(highlightcolor="#ffffff")

        self.lbl_Daminion_Environment = LabelFrame(top)
        self.lbl_Daminion_Environment.place(relx=0.01, rely=0.0, height=130, relwidth=0.97) # !!
        self.lbl_Daminion_Environment.configure(relief=GROOVE)
        self.lbl_Daminion_Environment.configure(foreground="black")
        self.lbl_Daminion_Environment.configure(text='''Daminion Environment''')
        self.lbl_Daminion_Environment.configure(background="#d9d9d9")
        self.lbl_Daminion_Environment.configure(highlightbackground="#d9d9d9")
        self.lbl_Daminion_Environment.configure(highlightcolor="black")
        self.lbl_Daminion_Environment.configure(width=730)

        self.Label_Catalog_Path_Name = Label(self.lbl_Daminion_Environment)
        self.Label_Catalog_Path_Name.place(relx=0, rely=0, height=20, width=170)    # !!
        self.Label_Catalog_Path_Name.configure(activebackground="#f9f9f9")
        self.Label_Catalog_Path_Name.configure(activeforeground="black")
        self.Label_Catalog_Path_Name.configure(anchor=W)
        self.Label_Catalog_Path_Name.configure(background="#d9d9d9")
        self.Label_Catalog_Path_Name.configure(disabledforeground="#a3a3a3")
        self.Label_Catalog_Path_Name.configure(foreground="#000000")
        self.Label_Catalog_Path_Name.configure(highlightbackground="#d9d9d9")
        self.Label_Catalog_Path_Name.configure(highlightcolor="black")
        self.Label_Catalog_Path_Name.configure(justify=LEFT)
        self.Label_Catalog_Path_Name.configure(text='''Select or Enter Catalog Name:''')

        self.txt_dbpath = Entry(self.lbl_Daminion_Environment)
        self.txt_dbpath.place(x=170, rely=0, height=20, width=270)
        self.txt_dbpath.configure(background="#d9d9d9")
        self.txt_dbpath.configure(disabledforeground="#a3a3a3")
        self.txt_dbpath.configure(font=font12)
        self.txt_dbpath.configure(foreground="#000000")
        self.txt_dbpath.configure(highlightbackground="#d9d9d9")
        self.txt_dbpath.configure(highlightcolor="black")
        self.txt_dbpath.configure(insertbackground="black")
        self.txt_dbpath.configure(relief=FLAT)
        self.txt_dbpath.configure(selectbackground="#c4c4c4")
        self.txt_dbpath.configure(selectforeground="black")
        self.txt_dbpath.configure(textvariable=DamScanGUI_support.txt_dbpath)

        self.txt_dbname = Entry(self.lbl_Daminion_Environment)
        self.txt_dbname.place(x=440, y=0, relheight=0.14, width=240)        # !!!
        self.txt_dbname.configure(background="#d9d9d9")
        self.txt_dbname.configure(disabledforeground="#a3a3a3")
        self.txt_dbname.configure(font=font14)
        self.txt_dbname.configure(foreground="#000000")
        self.txt_dbname.configure(highlightbackground="#d9d9d9")
        self.txt_dbname.configure(highlightcolor="black")
        self.txt_dbname.configure(insertbackground="black")
        self.txt_dbname.configure(justify=RIGHT)
        self.txt_dbname.configure(selectbackground="#c4c4c4")
        self.txt_dbname.configure(selectforeground="black")
        self.txt_dbname.configure(relief=FLAT)                              # !! relief=FLAT
        self.txt_dbname.configure(textvariable=DamScanGUI_support.txt_dbname)

        self.txt_server = Entry(self.lbl_Daminion_Environment)
        self.txt_server.place(relx=0.19, y=70, relheight=0.14, relwidth=0.24)   # !!!
        self.txt_server.configure(background="white")
        self.txt_server.configure(disabledforeground="#a3a3a3")
        self.txt_server.configure(font=font10)
        self.txt_server.configure(foreground="#000000")
        self.txt_server.configure(highlightbackground="#d9d9d9")
        self.txt_server.configure(highlightcolor="black")
        self.txt_server.configure(insertbackground="black")
        self.txt_server.configure(justify=RIGHT)
        self.txt_server.configure(relief=FLAT)
        self.txt_server.configure(selectbackground="#c4c4c4")
        self.txt_server.configure(selectforeground="black")
        self.txt_server.configure(textvariable=DamScanGUI_support.txt_server)
        self.txt_server.bind('<FocusOut>', lambda e,f="<ServerAttributes>": DamScanGUI_support.toggle_sqlite(e, f))
        self.txt_server.bind('<Return>', lambda e,f="<ServerAttributes>": DamScanGUI_support.toggle_sqlite(e, f))

        self.Colon_between_server_port = Label(self.lbl_Daminion_Environment)
        self.Colon_between_server_port.place(relx=0.43, y=70, height=16, width=7)   # !!!
        self.Colon_between_server_port.configure(activebackground="#ffffff")
        self.Colon_between_server_port.configure(activeforeground="black")
        self.Colon_between_server_port.configure(background="#ffffff")
        self.Colon_between_server_port.configure(borderwidth="0")
        self.Colon_between_server_port.configure(disabledforeground="#a3a3a3")
        self.Colon_between_server_port.configure(font=font11)
        self.Colon_between_server_port.configure(foreground="#000000")
        self.Colon_between_server_port.configure(highlightbackground="#d9d9d9")
        self.Colon_between_server_port.configure(highlightcolor="black")
        self.Colon_between_server_port.configure(padx="0")
        self.Colon_between_server_port.configure(pady="0")
        self.Colon_between_server_port.configure(text=''':''')
        self.Colon_between_server_port.configure(width=-9)                          # !!!

        self.txt_port = Entry(self.lbl_Daminion_Environment)
        self.txt_port.place(relx=0.44, y=70, relheight=0.14, relwidth=0.05)         # !!!
        self.txt_port.configure(background="white")
        self.txt_port.configure(disabledforeground="#a3a3a3")
        self.txt_port.configure(font=font10)
        self.txt_port.configure(foreground="#000000")
        self.txt_port.configure(highlightbackground="#d9d9d9")
        self.txt_port.configure(highlightcolor="black")
        self.txt_port.configure(insertbackground="black")
        self.txt_port.configure(relief=FLAT)
        self.txt_port.configure(selectbackground="#c4c4c4")
        self.txt_port.configure(selectforeground="black")
        self.txt_port.configure(textvariable=DamScanGUI_support.txt_port)
        self.txt_port.bind('<FocusOut>', lambda e,f="<ServerAttributes>": DamScanGUI_support.toggle_sqlite(e, f))
        self.txt_port.bind('<Return>', lambda e,f="<ServerAttributes>": DamScanGUI_support.toggle_sqlite(e, f))

        self.Postgres_User__Password = Label(self.lbl_Daminion_Environment)
        self.Postgres_User__Password.place(relx=0.01, y=90, height=20, width=120)   # !!
        self.Postgres_User__Password.configure(activebackground="#f9f9f9")
        self.Postgres_User__Password.configure(activeforeground="black")
        self.Postgres_User__Password.configure(anchor=W)
        self.Postgres_User__Password.configure(background="#d9d9d9")
        self.Postgres_User__Password.configure(disabledforeground="#a3a3a3")
        self.Postgres_User__Password.configure(foreground="#000000")
        self.Postgres_User__Password.configure(highlightbackground="#d9d9d9")
        self.Postgres_User__Password.configure(highlightcolor="black")
        self.Postgres_User__Password.configure(text='''User, Password''')

        self.txt_user = Entry(self.lbl_Daminion_Environment)
        self.txt_user.place(relx=0.19, y=90, relheight=0.14, relwidth=0.15)                 # !!!
        self.txt_user.configure(background="white")
        self.txt_user.configure(disabledforeground="#a3a3a3")
        self.txt_user.configure(font=font10)
        self.txt_user.configure(foreground="#000000")
        self.txt_user.configure(highlightbackground="#d9d9d9")
        self.txt_user.configure(highlightcolor="black")
        self.txt_user.configure(insertbackground="black")
        self.txt_user.configure(relief=FLAT)
        self.txt_user.configure(selectbackground="#c4c4c4")
        self.txt_user.configure(selectforeground="black")
        self.txt_user.configure(textvariable=DamScanGUI_support.txt_user)
        self.txt_user.bind('<FocusOut>', lambda e, f="<ServerAttributes>": DamScanGUI_support.toggle_sqlite(e, f))
        self.txt_user.bind('<Return>', lambda e, f="<ServerAttributes>": DamScanGUI_support.toggle_sqlite(e, f))

        self.txt_password = Entry(self.lbl_Daminion_Environment)
        self.txt_password.place(relx=0.34, y=90, relheight=0.14, relwidth=0.15)             # !!!
        self.txt_password.configure(background="white")
        self.txt_password.configure(disabledforeground="#a3a3a3")
        self.txt_password.configure(font=font10)
        self.txt_password.configure(foreground="#000000")
        self.txt_password.configure(highlightbackground="#d9d9d9")
        self.txt_password.configure(highlightcolor="black")
        self.txt_password.configure(insertbackground="black")
        self.txt_password.configure(relief=FLAT)
        self.txt_password.configure(selectbackground="#c4c4c4")
        self.txt_password.configure(selectforeground="black")
        self.txt_password.configure(show="*")
        self.txt_password.configure(textvariable=DamScanGUI_support.txt_password)
        self.txt_password.bind('<FocusOut>', lambda e,f="<ServerAttributes>": DamScanGUI_support.toggle_sqlite(e, f))
        self.txt_password.bind('<Return>', lambda e,f="<ServerAttributes>": DamScanGUI_support.toggle_sqlite(e, f))

        self.btn_browse_dmc_1 = Button(self.lbl_Daminion_Environment)
        self.btn_browse_dmc_1.place(relx=0.96, y=0, height=20, width=20)    # !!!
        self.btn_browse_dmc_1.configure(activebackground="#d9d9d9")
        self.btn_browse_dmc_1.configure(activeforeground="#000000")
        self.btn_browse_dmc_1.configure(background="#d9d9d9")
        self.btn_browse_dmc_1.configure(command=DamScanGUI_support.browse_dmc_1)
        self.btn_browse_dmc_1.configure(disabledforeground="#a3a3a3")
        self.btn_browse_dmc_1.configure(foreground="#000000")
        self.btn_browse_dmc_1.configure(highlightbackground="#d9d9d9")
        self.btn_browse_dmc_1.configure(highlightcolor="black")
        self.btn_browse_dmc_1.configure(pady="0")
        self.btn_browse_dmc_1.configure(text='''.dmc''')
        self.btn_browse_dmc_1.configure(image=self.openfold_gif)        # Icon !!!

        self.lbl_catalog_dates = Entry(self.lbl_Daminion_Environment)           # Entry not ttk.Label !!
        self.lbl_catalog_dates.place(relx=0.3, y=20, height=18, width=470)
        self.lbl_catalog_dates.configure(background="#d9d9d9")
        self.lbl_catalog_dates.configure(foreground="#000000")
        self.lbl_catalog_dates.configure(relief=FLAT)
        self.lbl_catalog_dates.configure(justify=RIGHT)
        self.lbl_catalog_dates.configure(textvariable=DamScanGUI_support.txt_catalog_dates)

        self.btn_use_dbname_as_ini = Button(self.lbl_Daminion_Environment)
        self.btn_use_dbname_as_ini.place(relx=0.96, y=20, height=20, width=20)                  # !!!
        self.btn_use_dbname_as_ini.configure(activebackground="#d9d9d9")
        self.btn_use_dbname_as_ini.configure(activeforeground="#000000")
        self.btn_use_dbname_as_ini.configure(background="#d9d9d9")
        self.btn_use_dbname_as_ini.configure(command=DamScanGUI_support.use_dbname_as_ini)
        self.btn_use_dbname_as_ini.configure(disabledforeground="#a3a3a3")
        self.btn_use_dbname_as_ini.configure(font=font15)
        self.btn_use_dbname_as_ini.configure(foreground="#000000")
        self.btn_use_dbname_as_ini.configure(highlightbackground="#d9d9d9")
        self.btn_use_dbname_as_ini.configure(highlightcolor="black")
        self.btn_use_dbname_as_ini.configure(pady="0")
        self.btn_use_dbname_as_ini.configure(text='''↙''')                          # !!! ↙
        self.btn_use_dbname_as_ini.configure(underline="-1")

        self.Postgres_Server_Port_User__Password1 = Label(self.lbl_Daminion_Environment)
        self.Postgres_Server_Port_User__Password1.place(relx=0.01, y=70, height=20, width=120) # !!!
        self.Postgres_Server_Port_User__Password1.configure(activebackground="#f9f9f9")
        self.Postgres_Server_Port_User__Password1.configure(activeforeground="black")
        self.Postgres_Server_Port_User__Password1.configure(anchor=W)
        self.Postgres_Server_Port_User__Password1.configure(background="#d9d9d9")
        self.Postgres_Server_Port_User__Password1.configure(disabledforeground="#a3a3a3")
        self.Postgres_Server_Port_User__Password1.configure(foreground="#000000")
        self.Postgres_Server_Port_User__Password1.configure(highlightbackground="#d9d9d9")
        self.Postgres_Server_Port_User__Password1.configure(highlightcolor="black")
        self.Postgres_Server_Port_User__Password1.configure(text='''Postgres Server & Port''')

        self.sltb_netcatalogs = ScrolledListBox(self.lbl_Daminion_Environment)
        self.sltb_netcatalogs.place(relx=0.6, y=40, height=70, width=280) # !!!
        self.sltb_netcatalogs.configure(background="white")
        self.sltb_netcatalogs.configure(disabledforeground="#a3a3a3")
        self.sltb_netcatalogs.configure(font=font10)
        self.sltb_netcatalogs.configure(foreground="black")
        self.sltb_netcatalogs.configure(highlightbackground="#d9d9d9")
        self.sltb_netcatalogs.configure(highlightcolor="#d9d9d9")
        self.sltb_netcatalogs.configure(selectbackground="#c4c4c4")
        self.sltb_netcatalogs.configure(selectforeground="black")
        self.sltb_netcatalogs.configure(selectmode=SINGLE)
        self.sltb_netcatalogs.configure(width=10)
        self.sltb_netcatalogs.configure(listvariable=DamScanGUI_support.lst_netcatalogs)
        self.sltb_netcatalogs.bind('<Double-Button-1>', lambda e: DamScanGUI_support.select_netcatalog(e))

        self.lbl_rbtn_sqlite = Radiobutton(self.lbl_Daminion_Environment)
        self.lbl_rbtn_sqlite.place(x=0, y=20, height=20, relwidth=0.24)   # !!!
        self.lbl_rbtn_sqlite.configure(activebackground="#d9d9d9")
        self.lbl_rbtn_sqlite.configure(activeforeground="#000000")
        self.lbl_rbtn_sqlite.configure(anchor=NW)
        self.lbl_rbtn_sqlite.configure(background="#d9d9d9")
        self.lbl_rbtn_sqlite.configure(command=DamScanGUI_support.toggle_sqlite)
        self.lbl_rbtn_sqlite.configure(disabledforeground="#a3a3a3")
        self.lbl_rbtn_sqlite.configure(font=font13)
        self.lbl_rbtn_sqlite.configure(foreground="#000000")
        self.lbl_rbtn_sqlite.configure(highlightbackground="#d9d9d9")
        self.lbl_rbtn_sqlite.configure(highlightcolor="black")
        self.lbl_rbtn_sqlite.configure(justify=LEFT)
        self.lbl_rbtn_sqlite.configure(text='''Standalone Catalog (SQLite)''')
        self.lbl_rbtn_sqlite.configure(value="1")
        self.lbl_rbtn_sqlite.configure(variable=DamScanGUI_support.ckb_sqlite)

        self.lbl_rbtn_postgres = Radiobutton(self.lbl_Daminion_Environment)
        self.lbl_rbtn_postgres.place(x=0, y=40, height=20, relwidth=0.24)   # !!!
        self.lbl_rbtn_postgres.configure(activebackground="#d9d9d9")
        self.lbl_rbtn_postgres.configure(activeforeground="#000000")
        self.lbl_rbtn_postgres.configure(anchor=NW)
        self.lbl_rbtn_postgres.configure(background="#d9d9d9")
        self.lbl_rbtn_postgres.configure(command=DamScanGUI_support.toggle_sqlite)
        self.lbl_rbtn_postgres.configure(disabledforeground="#a3a3a3")
        self.lbl_rbtn_postgres.configure(font=font13)
        self.lbl_rbtn_postgres.configure(foreground="#000000")
        self.lbl_rbtn_postgres.configure(highlightbackground="#d9d9d9")
        self.lbl_rbtn_postgres.configure(highlightcolor="black")
        self.lbl_rbtn_postgres.configure(justify=LEFT)
        self.lbl_rbtn_postgres.configure(text='''Server Catalog (Postgres)''')
        self.lbl_rbtn_postgres.configure(value="0")
        self.lbl_rbtn_postgres.configure(variable=DamScanGUI_support.ckb_sqlite)

        self.lbl_select_netcatalog_and_doubleclick = Label(self.lbl_Daminion_Environment)
        self.lbl_select_netcatalog_and_doubleclick.place(relx=0.32, y=40, height=20, width=204)
        self.lbl_select_netcatalog_and_doubleclick.configure(activebackground="#f9f9f9")
        self.lbl_select_netcatalog_and_doubleclick.configure(activeforeground="black")
        self.lbl_select_netcatalog_and_doubleclick.configure(background="#d9d9d9")
        self.lbl_select_netcatalog_and_doubleclick.configure(disabledforeground="#d9d9d9")
        self.lbl_select_netcatalog_and_doubleclick.configure(foreground="#000000")
        self.lbl_select_netcatalog_and_doubleclick.configure(highlightbackground="#d9d9d9")
        self.lbl_select_netcatalog_and_doubleclick.configure(highlightcolor="black")
        self.lbl_select_netcatalog_and_doubleclick.configure(state=DISABLED)            # Todo
        self.lbl_select_netcatalog_and_doubleclick.configure(text='''Select Netcatalog and Double Click -->''')

        self.lblAnalysis_Environment = LabelFrame(top)
        self.lblAnalysis_Environment.place(relx=0.01, rely=0.61, relheight=0.12, relwidth=0.97) # !!
        self.lblAnalysis_Environment.configure(relief=GROOVE)
        self.lblAnalysis_Environment.configure(foreground="black")
        self.lblAnalysis_Environment.configure(text='''Output Options''')
        self.lblAnalysis_Environment.configure(background="#d9d9d9")
        self.lblAnalysis_Environment.configure(highlightbackground="#d9d9d9")
        self.lblAnalysis_Environment.configure(highlightcolor="black")
        self.lblAnalysis_Environment.configure(width=730)

        self.Output_file_for_report = Label(self.lblAnalysis_Environment)
        self.Output_file_for_report.place(x=10, y=0, height=20, width=200) #!! x=10, y=0, height=20, width=200
        self.Output_file_for_report.configure(activebackground="#f9f9f9")
        self.Output_file_for_report.configure(activeforeground="black")
        self.Output_file_for_report.configure(background="#d9d9d9")
        self.Output_file_for_report.configure(disabledforeground="#a3a3a3")
        self.Output_file_for_report.configure(foreground="#000000")
        self.Output_file_for_report.configure(highlightbackground="#d9d9d9")
        self.Output_file_for_report.configure(highlightcolor="black")
        self.Output_file_for_report.configure(text='''Output file for report (if not display)''')

        self.style.map('TRadiobutton', background=
        [('selected', _bgcolor), ('active', "_ana2color")])
        self.rbtn_verbose_0 = ttk.Radiobutton(self.lblAnalysis_Environment)
        self.rbtn_verbose_0.place(x=220, y=40, relwidth=0.07, height=22)
        self.rbtn_verbose_0.configure(variable=DamScanGUI_support.rbtn_verbose)
        self.rbtn_verbose_0.configure(value="0")
        self.rbtn_verbose_0.configure(takefocus="0")
        self.rbtn_verbose_0.configure(text='''Silent''')

        self.rbtn_verbose_1 = ttk.Radiobutton(self.lblAnalysis_Environment)
        self.rbtn_verbose_1.place(x=280, y=40, relwidth=0.09, height=22)    # !!
        self.rbtn_verbose_1.configure(variable=DamScanGUI_support.rbtn_verbose)
        self.rbtn_verbose_1.configure(takefocus="0")
        self.rbtn_verbose_1.configure(text='''Verbose''')

        self.rbtn_verbose_2 = ttk.Radiobutton(self.lblAnalysis_Environment)
        self.rbtn_verbose_2.place(x=350, y=40, relwidth=0.08, height=22)
        self.rbtn_verbose_2.configure(variable=DamScanGUI_support.rbtn_verbose)
        self.rbtn_verbose_2.configure(value="2")
        self.rbtn_verbose_2.configure(takefocus="0")
        self.rbtn_verbose_2.configure(text='''Chatty''')

        self.ckb_display_only = Checkbutton(self.lblAnalysis_Environment)
        self.ckb_display_only.place(x=220, y=20, height=20, relwidth=0.3)            # !!
        self.ckb_display_only.configure(activebackground="#d9d9d9")
        self.ckb_display_only.configure(activeforeground="#000000")
        self.ckb_display_only.configure(anchor=W)
        self.ckb_display_only.configure(background="#d9d9d9")
        self.ckb_display_only.configure(disabledforeground="#a3a3a3")
        self.ckb_display_only.configure(foreground="#000000")
        self.ckb_display_only.configure(highlightbackground="#d9d9d9")
        self.ckb_display_only.configure(highlightcolor="black")
        self.ckb_display_only.configure(justify=LEFT)
        self.ckb_display_only.configure(takefocus="0")
        self.ckb_display_only.configure(text='''Display all Output only on Screen''')
        self.ckb_display_only.configure(underline="0")
        self.ckb_display_only.configure(variable=DamScanGUI_support.ckb_display_only)

        self.ckb_itemid = Checkbutton(self.lblAnalysis_Environment)
        self.ckb_itemid.place(relx=0.01, y=20, height=20, relwidth=0.27)   # !!
        self.ckb_itemid.configure(activebackground="#d9d9d9")
        self.ckb_itemid.configure(activeforeground="#000000")
        self.ckb_itemid.configure(anchor=W)
        self.ckb_itemid.configure(background="#d9d9d9")
        self.ckb_itemid.configure(disabledforeground="#a3a3a3")
        self.ckb_itemid.configure(foreground="#000000")
        self.ckb_itemid.configure(highlightbackground="#d9d9d9")
        self.ckb_itemid.configure(highlightcolor="black")
        self.ckb_itemid.configure(justify=LEFT)
        self.ckb_itemid.configure(takefocus="0")
        self.ckb_itemid.configure(text='''Show Item Id''')
        self.ckb_itemid.configure(underline="5")
        self.ckb_itemid.configure(variable=DamScanGUI_support.ckb_itemid)

        self.ckb_fullpath1 = Checkbutton(self.lblAnalysis_Environment)
        self.ckb_fullpath1.place(relx=0.01, y=40, height=20, relwidth=0.27)         # !!
        self.ckb_fullpath1.configure(activebackground="#d9d9d9")
        self.ckb_fullpath1.configure(activeforeground="#000000")
        self.ckb_fullpath1.configure(anchor=W)
        self.ckb_fullpath1.configure(background="#d9d9d9")
        self.ckb_fullpath1.configure(disabledforeground="#a3a3a3")
        self.ckb_fullpath1.configure(foreground="#000000")
        self.ckb_fullpath1.configure(highlightbackground="#d9d9d9")
        self.ckb_fullpath1.configure(highlightcolor="black")
        self.ckb_fullpath1.configure(justify=LEFT)
        self.ckb_fullpath1.configure(takefocus="0")
        self.ckb_fullpath1.configure(text='''Show full directory path''')
        self.ckb_fullpath1.configure(underline="5")
        self.ckb_fullpath1.configure(variable=DamScanGUI_support.ckb_fullpath)

        self.txt_outfilename = Entry(self.lblAnalysis_Environment)
        self.txt_outfilename.place(x=220, y=0, height=20, width=480)   # x=220, y=0, height=20, width=480
        self.txt_outfilename.configure(background="white")
        self.txt_outfilename.configure(disabledforeground="#a3a3a3")
        self.txt_outfilename.configure(font=font10)
        self.txt_outfilename.configure(foreground="#000000")
        self.txt_outfilename.configure(highlightbackground="#d9d9d9")
        self.txt_outfilename.configure(highlightcolor="black")
        self.txt_outfilename.configure(insertbackground="black")
        self.txt_outfilename.configure(justify=RIGHT)
        self.txt_outfilename.configure(selectbackground="#c4c4c4")
        self.txt_outfilename.configure(selectforeground="black")
        self.txt_outfilename.configure(textvariable=DamScanGUI_support.txt_outfilename)

        self.btn_Open_Output_File_in_Notepad = Button(self.lblAnalysis_Environment)
        self.btn_Open_Output_File_in_Notepad.place(x=600, y=21, height=20, width=50) # !!
        self.btn_Open_Output_File_in_Notepad.configure(activebackground="#d9d9d9")
        self.btn_Open_Output_File_in_Notepad.configure(activeforeground="#000000")
        self.btn_Open_Output_File_in_Notepad.configure(background="#d9d9d9")
        self.btn_Open_Output_File_in_Notepad.configure(command=DamScanGUI_support.open_output_file_in_notepad)
        self.btn_Open_Output_File_in_Notepad.configure(disabledforeground="#a3a3a3")
        self.btn_Open_Output_File_in_Notepad.configure(foreground="#000000")
        self.btn_Open_Output_File_in_Notepad.configure(highlightbackground="#d9d9d9")
        self.btn_Open_Output_File_in_Notepad.configure(highlightcolor="black")
        self.btn_Open_Output_File_in_Notepad.configure(pady="0")
        self.btn_Open_Output_File_in_Notepad.configure(text='''Notepad''')
        self.btn_Open_Output_File_in_Notepad.configure(underline="8")
        self.btn_Open_Output_File_in_Notepad.configure(width=60)

        self.lbl_use_outfile_name_as_ack_file = Button(self.lblAnalysis_Environment)
        self.lbl_use_outfile_name_as_ack_file.place(x=460, y=21, height=20, width=130) # !! relx=0.42, y=20, height=20, width=120!
        self.lbl_use_outfile_name_as_ack_file.configure(activebackground="#d9d9d9")
        self.lbl_use_outfile_name_as_ack_file.configure(activeforeground="#000000")
        self.lbl_use_outfile_name_as_ack_file.configure(background="#d9d9d9")
        self.lbl_use_outfile_name_as_ack_file.configure(command=DamScanGUI_support.use_outfile_name_as_ack_file)
        self.lbl_use_outfile_name_as_ack_file.configure(disabledforeground="#a3a3a3")
        self.lbl_use_outfile_name_as_ack_file.configure(foreground="#000000")
        self.lbl_use_outfile_name_as_ack_file.configure(highlightbackground="#d9d9d9")
        self.lbl_use_outfile_name_as_ack_file.configure(highlightcolor="black")
        self.lbl_use_outfile_name_as_ack_file.configure(pady="0")
        self.lbl_use_outfile_name_as_ack_file.configure(text='''Use as Acknowledged''')
        self.lbl_use_outfile_name_as_ack_file.configure(underline="7")
        self.lbl_use_outfile_name_as_ack_file.configure(width=130)

        self.btn_browse_for_output_file = Button(self.lblAnalysis_Environment)
        self.btn_browse_for_output_file.place(relx=0.96, y=0, height=20, width=20)  # !!
        self.btn_browse_for_output_file.configure(activebackground="#d9d9d9")
        self.btn_browse_for_output_file.configure(activeforeground="#000000")
        self.btn_browse_for_output_file.configure(background="#d9d9d9")
        self.btn_browse_for_output_file.configure(command=DamScanGUI_support.browse_for_output_file)
        self.btn_browse_for_output_file.configure(disabledforeground="#a3a3a3")
        self.btn_browse_for_output_file.configure(foreground="#000000")
        self.btn_browse_for_output_file.configure(highlightbackground="#d9d9d9")
        self.btn_browse_for_output_file.configure(highlightcolor="black")
        self.btn_browse_for_output_file.configure(pady="0")
        self.btn_browse_for_output_file.configure(text='''Fldr''')
        self.btn_browse_for_output_file.configure(image=self.openfold_gif)        # Icon !!!

        self.btn_Open_Output_File_in_Excel = Button(self.lblAnalysis_Environment)
        self.btn_Open_Output_File_in_Excel.place(relx=0.91, y=21, height=20, width=40)  # !! y=20, height=20, width=40
        self.btn_Open_Output_File_in_Excel.configure(activebackground="#d9d9d9")
        self.btn_Open_Output_File_in_Excel.configure(activeforeground="#000000")
        self.btn_Open_Output_File_in_Excel.configure(background="#d9d9d9")
        self.btn_Open_Output_File_in_Excel.configure(command=DamScanGUI_support.open_output_file_in_excel)
        self.btn_Open_Output_File_in_Excel.configure(disabledforeground="#a3a3a3")
        self.btn_Open_Output_File_in_Excel.configure(foreground="#000000")
        self.btn_Open_Output_File_in_Excel.configure(highlightbackground="#d9d9d9")
        self.btn_Open_Output_File_in_Excel.configure(highlightcolor="black")
        self.btn_Open_Output_File_in_Excel.configure(pady="0")
        self.btn_Open_Output_File_in_Excel.configure(text='''Excel''')
        self.btn_Open_Output_File_in_Excel.configure(underline="8")
        self.btn_Open_Output_File_in_Excel.configure(width=40)

        self.Work_with_Option__Sets = LabelFrame(top)
        self.Work_with_Option__Sets.place(relx=0.01, rely=0.74, relheight=0.21
                , relwidth=0.97)
        self.Work_with_Option__Sets.configure(relief=GROOVE)
        self.Work_with_Option__Sets.configure(foreground="black")
        self.Work_with_Option__Sets.configure(text='''Work with Option Sets (.ini Files)''')
        self.Work_with_Option__Sets.configure(background="#d9d9d9")
        self.Work_with_Option__Sets.configure(highlightbackground="#d9d9d9")
        self.Work_with_Option__Sets.configure(highlightcolor="black")
        self.Work_with_Option__Sets.configure(width=730)

        self.Recent_ini_files1 = ScrolledListBox(self.Work_with_Option__Sets)
        self.Recent_ini_files1.place(relx=0.55, rely=0.18, relheight=0.82
                , relwidth=0.44)
        self.Recent_ini_files1.configure(background="white")
        self.Recent_ini_files1.configure(disabledforeground="#a3a3a3")
        self.Recent_ini_files1.configure(font=font10)
        self.Recent_ini_files1.configure(foreground="black")
        self.Recent_ini_files1.configure(highlightbackground="#d9d9d9")
        self.Recent_ini_files1.configure(highlightcolor="#d9d9d9")
        self.Recent_ini_files1.configure(selectbackground="#c4c4c4")
        self.Recent_ini_files1.configure(selectforeground="black")
        self.Recent_ini_files1.configure(selectmode=SINGLE)
        self.Recent_ini_files1.configure(takefocus="0")
        self.Recent_ini_files1.configure(width=10)
        self.Recent_ini_files1.configure(selectmode=SINGLE)             # !! selectmode=SINGLE !!
        self.Recent_ini_files1.configure(listvariable=DamScanGUI_support.lstb_recent_ini_files)
        self.Recent_ini_files1.bind('<Double-Button-1>', lambda e: DamScanGUI_support.select_ini_file(e)) # !!

        self.lbl_Recently_used_Option_Sets = Label(self.Work_with_Option__Sets)
        self.lbl_Recently_used_Option_Sets.place(relx=0.55, rely=0, height=20
                , width=320)
        self.lbl_Recently_used_Option_Sets.configure(activebackground="#f9f9f9")
        self.lbl_Recently_used_Option_Sets.configure(activeforeground="black")
        self.lbl_Recently_used_Option_Sets.configure(background="#d9d9d9")
        self.lbl_Recently_used_Option_Sets.configure(disabledforeground="#a3a3a3")
        self.lbl_Recently_used_Option_Sets.configure(foreground="#000000")
        self.lbl_Recently_used_Option_Sets.configure(highlightbackground="#d9d9d9")
        self.lbl_Recently_used_Option_Sets.configure(highlightcolor="black")
        self.lbl_Recently_used_Option_Sets.configure(text='''Recently Used Option Sets''')

        self.btn_Save_Options_to_INI_files1 = Button(self.Work_with_Option__Sets)
        self.btn_Save_Options_to_INI_files1.place(relx=0.01, rely=0.57, height=20
                , width=90)
        self.btn_Save_Options_to_INI_files1.configure(activebackground="#d9d9d9")
        self.btn_Save_Options_to_INI_files1.configure(activeforeground="#000000")
        self.btn_Save_Options_to_INI_files1.configure(background="#d9d9d9")
        self.btn_Save_Options_to_INI_files1.configure(command=DamScanGUI_support.save_options_to_ini_files)
        self.btn_Save_Options_to_INI_files1.configure(disabledforeground="#a3a3a3")
        self.btn_Save_Options_to_INI_files1.configure(foreground="#000000")
        self.btn_Save_Options_to_INI_files1.configure(highlightbackground="#d9d9d9")
        self.btn_Save_Options_to_INI_files1.configure(highlightcolor="black")
        self.btn_Save_Options_to_INI_files1.configure(pady="0")
        self.btn_Save_Options_to_INI_files1.configure(takefocus="0")
        self.btn_Save_Options_to_INI_files1.configure(text='''Save to-->''')
        self.btn_Save_Options_to_INI_files1.configure(underline="0")

        self.btn_Load_Options_from_INI_file = Button(self.Work_with_Option__Sets)
        self.btn_Load_Options_from_INI_file.place(relx=0.01, rely=0.45, height=20
                , width=90)
        self.btn_Load_Options_from_INI_file.configure(activebackground="#d9d9d9")
        self.btn_Load_Options_from_INI_file.configure(activeforeground="#000000")
        self.btn_Load_Options_from_INI_file.configure(background="#d9d9d9")
        self.btn_Load_Options_from_INI_file.configure(command=DamScanGUI_support.load_options_from_ini_file)
        self.btn_Load_Options_from_INI_file.configure(disabledforeground="#a3a3a3")
        self.btn_Load_Options_from_INI_file.configure(foreground="#000000")
        self.btn_Load_Options_from_INI_file.configure(highlightbackground="#d9d9d9")
        self.btn_Load_Options_from_INI_file.configure(highlightcolor="black")
        self.btn_Load_Options_from_INI_file.configure(pady="0")
        self.btn_Load_Options_from_INI_file.configure(takefocus="0")
        self.btn_Load_Options_from_INI_file.configure(text='''Load from-->''')

        self.lbl_Program_to_Analyse_Groups_or_links1 = Label(self.Work_with_Option__Sets)
        self.lbl_Program_to_Analyse_Groups_or_links1.place(relx=0.25, rely=0.82
                , height=20, width=180)
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(activebackground="#f9f9f9")
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(activeforeground="black")
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(anchor=W)
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(background="#d9d9d9")
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(disabledforeground="#a3a3a3")
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(foreground="#000000")
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(highlightbackground="#d9d9d9")
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(highlightcolor="black")
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(justify=LEFT)
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(text='''Browse for More Options files-->''')
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(underline="16")
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(width=190)

        self.txt_newdamscanini = Entry(self.Work_with_Option__Sets)
        self.txt_newdamscanini.place(relx=0.14, rely=0.45, relheight=0.12
                , relwidth=0.38)
        self.txt_newdamscanini.configure(background="white")
        self.txt_newdamscanini.configure(disabledforeground="#a3a3a3")
        self.txt_newdamscanini.configure(font=font10)
        self.txt_newdamscanini.configure(foreground="#000000")
        self.txt_newdamscanini.configure(highlightbackground="#d9d9d9")
        self.txt_newdamscanini.configure(highlightcolor="black")
        self.txt_newdamscanini.configure(insertbackground="black")
        self.txt_newdamscanini.configure(selectbackground="#c4c4c4")
        self.txt_newdamscanini.configure(selectforeground="black")
        self.txt_newdamscanini.configure(textvariable=DamScanGUI_support.txt_newdamscanini)

        self.txt_damscanini = Entry(self.Work_with_Option__Sets)
        self.txt_damscanini.place(relx=0.14, rely=0.57, relheight=0.12
                , relwidth=0.38)
        self.txt_damscanini.configure(background="white")
        self.txt_damscanini.configure(disabledforeground="#a3a3a3")
        self.txt_damscanini.configure(font=font10)
        self.txt_damscanini.configure(foreground="#000000")
        self.txt_damscanini.configure(highlightbackground="#d9d9d9")
        self.txt_damscanini.configure(highlightcolor="black")
        self.txt_damscanini.configure(insertbackground="black")
        self.txt_damscanini.configure(selectbackground="#c4c4c4")
        self.txt_damscanini.configure(selectforeground="black")
        self.txt_damscanini.configure(textvariable=DamScanGUI_support.txt_damscanini)

        self.btn_browse_ini_files = Button(self.Work_with_Option__Sets)
        self.btn_browse_ini_files.place(relx=0.51, rely=0.82, height=20
                , width=20)
        self.btn_browse_ini_files.configure(activebackground="#d9d9d9")
        self.btn_browse_ini_files.configure(activeforeground="#000000")
        self.btn_browse_ini_files.configure(background="#d9d9d9")
        self.btn_browse_ini_files.configure(command=DamScanGUI_support.browse_ini_files)
        self.btn_browse_ini_files.configure(disabledforeground="#a3a3a3")
        self.btn_browse_ini_files.configure(foreground="#000000")
        self.btn_browse_ini_files.configure(highlightbackground="#d9d9d9")
        self.btn_browse_ini_files.configure(highlightcolor="black")
        self.btn_browse_ini_files.configure(pady="0")
        self.btn_browse_ini_files.configure(text='''fldr''')
        self.btn_browse_ini_files.configure(image=self.openfold_gif)            # Icon !!!

        self.lbl_use_ini_name_as_outfile_name = Button(self.Work_with_Option__Sets)
        self.lbl_use_ini_name_as_outfile_name.place(relx=0.14, rely=0.69, height=20, width=20)  # !!
        self.lbl_use_ini_name_as_outfile_name.configure(activebackground="#d9d9d9")
        self.lbl_use_ini_name_as_outfile_name.configure(activeforeground="#000000")
        self.lbl_use_ini_name_as_outfile_name.configure(background="#d9d9d9")
        self.lbl_use_ini_name_as_outfile_name.configure(command=DamScanGUI_support.use_ini_name_as_outfile_name)
        self.lbl_use_ini_name_as_outfile_name.configure(disabledforeground="#a3a3a3")
        self.lbl_use_ini_name_as_outfile_name.configure(foreground="#000000")
        self.lbl_use_ini_name_as_outfile_name.configure(highlightbackground="#d9d9d9")
        self.lbl_use_ini_name_as_outfile_name.configure(highlightcolor="black")
        self.lbl_use_ini_name_as_outfile_name.configure(pady="0")
        self.lbl_use_ini_name_as_outfile_name.configure(font=font15)
        self.lbl_use_ini_name_as_outfile_name.configure(text='''↗''')       # Use as Output File Name
        self.lbl_use_ini_name_as_outfile_name.configure(underline="-1")

        self.lbl_select_recent_ini_file = Label(self.Work_with_Option__Sets)
        self.lbl_select_recent_ini_file.place(relx=0.32, rely=0.18, height=21, width=160)
        self.lbl_select_recent_ini_file.configure(activebackground="#f9f9f9")
        self.lbl_select_recent_ini_file.configure(activeforeground="black")
        self.lbl_select_recent_ini_file.configure(background="#d9d9d9")
        self.lbl_select_recent_ini_file.configure(disabledforeground="#a3a3a3")
        self.lbl_select_recent_ini_file.configure(foreground="#000000")
        self.lbl_select_recent_ini_file.configure(highlightbackground="#d9d9d9")
        self.lbl_select_recent_ini_file.configure(highlightcolor="black")
        self.lbl_select_recent_ini_file.configure(text='''Double Click Options Set-->''')

        self.style.configure('TNotebook.Tab', background=_bgcolor)
        self.style.configure('TNotebook.Tab', foreground=_fgcolor)
        self.style.map('TNotebook.Tab', background=
            [('selected', _compcolor), ('active',_ana2color)])
        self.tabs = ttk.Notebook(top)
        self.tabs.place(relx=0.01, rely=0.215, relheight=0.39, relwidth=0.97)   # !!
        self.tabs.configure(width=730)
        self.tabs.configure(takefocus="0")
        self.tabs_t1 = ttk.Frame(self.tabs)
        self.tabs.add(self.tabs_t1, padding=3)
        self.tabs.tab(0, text=120*" ",underline="-1",)   # Tab titles to be overlaid by radio buttons
        self.tabs_t2 = ttk.Frame(self.tabs)              # rbtn_analysis_type
        self.tabs.add(self.tabs_t2, padding=3)
        self.tabs.tab(1, text=120*" ",underline="-1",)

        self.Labelframe1 = LabelFrame(self.tabs_t1)
        self.Labelframe1.place(relx=0.0, rely=0.0, relheight=0.41, relwidth=0.26)

        self.Labelframe1.configure(relief=GROOVE)
        self.Labelframe1.configure(foreground="black")
        self.Labelframe1.configure(text='''Tags to Consider''')
        self.Labelframe1.configure(background="#d9d9d9")
        self.Labelframe1.configure(highlightbackground="#d9d9d9")
        self.Labelframe1.configure(highlightcolor="black")
        self.Labelframe1.configure(width=190)

        self.ckb_event1 = Checkbutton(self.Labelframe1)
        self.ckb_event1.place(relx=0.0, rely=0.31, relheight=0.17, relwidth=0.29)

        self.ckb_event1.configure(activebackground="#d9d9d9")
        self.ckb_event1.configure(activeforeground="#000000")
        self.ckb_event1.configure(anchor=W)
        self.ckb_event1.configure(background="#d9d9d9")
        self.ckb_event1.configure(disabledforeground="#a3a3a3")
        self.ckb_event1.configure(foreground="#000000")
        self.ckb_event1.configure(highlightbackground="#d9d9d9")
        self.ckb_event1.configure(highlightcolor="black")
        self.ckb_event1.configure(justify=LEFT)
        self.ckb_event1.configure(takefocus="0")
        self.ckb_event1.configure(text='''Event''')
        self.ckb_event1.configure(variable=DamScanGUI_support.ckb_event)

        self.ckb_gps1 = Checkbutton(self.Labelframe1)
        self.ckb_gps1.place(relx=0.68, rely=0.31, relheight=0.17, relwidth=0.24)
        self.ckb_gps1.configure(activebackground="#d9d9d9")
        self.ckb_gps1.configure(activeforeground="#000000")
        self.ckb_gps1.configure(anchor=W)
        self.ckb_gps1.configure(background="#d9d9d9")
        self.ckb_gps1.configure(disabledforeground="#a3a3a3")
        self.ckb_gps1.configure(foreground="#000000")
        self.ckb_gps1.configure(highlightbackground="#d9d9d9")
        self.ckb_gps1.configure(highlightcolor="black")
        self.ckb_gps1.configure(justify=LEFT)
        self.ckb_gps1.configure(takefocus="0")
        self.ckb_gps1.configure(text='''GPS''')
        self.ckb_gps1.configure(variable=DamScanGUI_support.ckb_gps)

        self.ckb_collections1 = Checkbutton(self.Labelframe1)
        self.ckb_collections1.place(relx=0.0, y=0, relheight=0.17, relwidth=0.46)   # !!
        self.ckb_collections1.configure(activebackground="#d9d9d9")
        self.ckb_collections1.configure(activeforeground="#000000")
        self.ckb_collections1.configure(anchor=W)
        self.ckb_collections1.configure(background="#d9d9d9")
        self.ckb_collections1.configure(disabledforeground="#a3a3a3")
        self.ckb_collections1.configure(foreground="#000000")
        self.ckb_collections1.configure(highlightbackground="#d9d9d9")
        self.ckb_collections1.configure(highlightcolor="black")
        self.ckb_collections1.configure(justify=LEFT)
        self.ckb_collections1.configure(takefocus="0")
        self.ckb_collections1.configure(text='''Collections''')
        self.ckb_collections1.configure(variable=DamScanGUI_support.ckb_collections)

        self.ckb_people1 = Checkbutton(self.Labelframe1)
        self.ckb_people1.place(relx=0.0, rely=0.14, relheight=0.17
                , relwidth=0.41)
        self.ckb_people1.configure(activebackground="#d9d9d9")
        self.ckb_people1.configure(activeforeground="#000000")
        self.ckb_people1.configure(anchor=W)
        self.ckb_people1.configure(background="#d9d9d9")
        self.ckb_people1.configure(disabledforeground="#a3a3a3")
        self.ckb_people1.configure(foreground="#000000")
        self.ckb_people1.configure(highlightbackground="#d9d9d9")
        self.ckb_people1.configure(highlightcolor="black")
        self.ckb_people1.configure(justify=LEFT)
        self.ckb_people1.configure(takefocus="0")
        self.ckb_people1.configure(text='''People''')
        self.ckb_people1.configure(variable=DamScanGUI_support.ckb_people)

        self.ckb_keywords1 = Checkbutton(self.Labelframe1)
        self.ckb_keywords1.place(relx=0.0, rely=0.48, relheight=0.17
                , relwidth=0.39)
        self.ckb_keywords1.configure(activebackground="#d9d9d9")
        self.ckb_keywords1.configure(activeforeground="#000000")
        self.ckb_keywords1.configure(anchor=W)
        self.ckb_keywords1.configure(background="#d9d9d9")
        self.ckb_keywords1.configure(disabledforeground="#a3a3a3")
        self.ckb_keywords1.configure(foreground="#000000")
        self.ckb_keywords1.configure(highlightbackground="#d9d9d9")
        self.ckb_keywords1.configure(highlightcolor="black")
        self.ckb_keywords1.configure(justify=LEFT)
        self.ckb_keywords1.configure(takefocus="0")
        self.ckb_keywords1.configure(text='''Keywords''')
        self.ckb_keywords1.configure(variable=DamScanGUI_support.ckb_keywords)

        self.ckb_categories1 = Checkbutton(self.Labelframe1)
        self.ckb_categories1.place(relx=0.42, rely=0.64, relheight=0.17
                , relwidth=0.42)
        self.ckb_categories1.configure(activebackground="#d9d9d9")
        self.ckb_categories1.configure(activeforeground="#000000")
        self.ckb_categories1.configure(anchor=W)
        self.ckb_categories1.configure(background="#d9d9d9")
        self.ckb_categories1.configure(disabledforeground="#a3a3a3")
        self.ckb_categories1.configure(foreground="#000000")
        self.ckb_categories1.configure(highlightbackground="#d9d9d9")
        self.ckb_categories1.configure(highlightcolor="black")
        self.ckb_categories1.configure(justify=LEFT)
        self.ckb_categories1.configure(takefocus="0")
        self.ckb_categories1.configure(text='''Categories''')
        self.ckb_categories1.configure(variable=DamScanGUI_support.ckb_categories)

        self.ckb_place1 = Checkbutton(self.Labelframe1)
        self.ckb_place1.place(relx=0.42, rely=0.31, relheight=0.17
                , relwidth=0.29)
        self.ckb_place1.configure(activebackground="#d9d9d9")
        self.ckb_place1.configure(activeforeground="#000000")
        self.ckb_place1.configure(anchor=W)
        self.ckb_place1.configure(background="#d9d9d9")
        self.ckb_place1.configure(disabledforeground="#a3a3a3")
        self.ckb_place1.configure(foreground="#000000")
        self.ckb_place1.configure(highlightbackground="#d9d9d9")
        self.ckb_place1.configure(highlightcolor="black")
        self.ckb_place1.configure(justify=LEFT)
        self.ckb_place1.configure(takefocus="0")
        self.ckb_place1.configure(text='''Place''')
        self.ckb_place1.configure(variable=DamScanGUI_support.ckb_place)

        self.lbl_ckb_Title = Checkbutton(self.Labelframe1)
        self.lbl_ckb_Title.place(relx=0.0, rely=0.64, relheight=0.17
                , relwidth=0.39)
        self.lbl_ckb_Title.configure(activebackground="#d9d9d9")
        self.lbl_ckb_Title.configure(activeforeground="#000000")
        self.lbl_ckb_Title.configure(anchor=W)
        self.lbl_ckb_Title.configure(background="#d9d9d9")
        self.lbl_ckb_Title.configure(disabledforeground="#a3a3a3")
        self.lbl_ckb_Title.configure(foreground="#000000")
        self.lbl_ckb_Title.configure(highlightbackground="#d9d9d9")
        self.lbl_ckb_Title.configure(highlightcolor="black")
        self.lbl_ckb_Title.configure(justify=LEFT)
        self.lbl_ckb_Title.configure(takefocus="0")
        self.lbl_ckb_Title.configure(text='''Title''')
        self.lbl_ckb_Title.configure(variable=DamScanGUI_support.ckb_title)

        self.lbl_ckb_description = Checkbutton(self.Labelframe1)
        self.lbl_ckb_description.place(relx=0.42, rely=0.48, relheight=0.17
                , relwidth=0.47)
        self.lbl_ckb_description.configure(activebackground="#d9d9d9")
        self.lbl_ckb_description.configure(activeforeground="#000000")
        self.lbl_ckb_description.configure(anchor=W)
        self.lbl_ckb_description.configure(background="#d9d9d9")
        self.lbl_ckb_description.configure(disabledforeground="#a3a3a3")
        self.lbl_ckb_description.configure(foreground="#000000")
        self.lbl_ckb_description.configure(highlightbackground="#d9d9d9")
        self.lbl_ckb_description.configure(highlightcolor="black")
        self.lbl_ckb_description.configure(justify=LEFT)
        self.lbl_ckb_description.configure(takefocus="0")
        self.lbl_ckb_description.configure(text='''Description''')
        self.lbl_ckb_description.configure(variable=DamScanGUI_support.ckb_description)

        self.ckb_comments = Checkbutton(self.Labelframe1)
        self.ckb_comments.place(relx=0.42, rely=0.14, relheight=0.17
                , relwidth=0.42)
        self.ckb_comments.configure(activebackground="#d9d9d9")
        self.ckb_comments.configure(activeforeground="#000000")
        self.ckb_comments.configure(anchor=W)
        self.ckb_comments.configure(background="#d9d9d9")
        self.ckb_comments.configure(disabledforeground="#a3a3a3")
        self.ckb_comments.configure(foreground="#000000")
        self.ckb_comments.configure(highlightbackground="#d9d9d9")
        self.ckb_comments.configure(highlightcolor="black")
        self.ckb_comments.configure(justify=LEFT)
        self.ckb_comments.configure(takefocus="0")
        self.ckb_comments.configure(text='''Comment''')
        self.ckb_comments.configure(variable=DamScanGUI_support.ckb_comments)

        self.Frame_Tags_Names1 = LabelFrame(self.tabs_t1)
        self.Frame_Tags_Names1.place(relx=0.4, rely=0.0, relheight=0.41, relwidth=0.59) # !!!
        self.Frame_Tags_Names1.configure(relief=GROOVE)
        self.Frame_Tags_Names1.configure(foreground="black")
        self.Frame_Tags_Names1.configure(text='''Verify Names of Image Files''')
        self.Frame_Tags_Names1.configure(background="#d9d9d9")
        self.Frame_Tags_Names1.configure(highlightbackground="#d9d9d9")
        self.Frame_Tags_Names1.configure(highlightcolor="black")
        self.Frame_Tags_Names1.configure(width=460)

        self.ckb_verify_basenames1 = Checkbutton(self.Frame_Tags_Names1)
        self.ckb_verify_basenames1.place(relx=0.18, y=0, height=50, relwidth=0.8)   # !!!
        self.ckb_verify_basenames1.configure(activebackground="#d9d9d9")
        self.ckb_verify_basenames1.configure(activeforeground="#000000")
        self.ckb_verify_basenames1.configure(anchor=W)
        self.ckb_verify_basenames1.configure(background="#d9d9d9")
        self.ckb_verify_basenames1.configure(disabledforeground="#a3a3a3")
        self.ckb_verify_basenames1.configure(foreground="#000000")
        self.ckb_verify_basenames1.configure(highlightbackground="#d9d9d9")
        self.ckb_verify_basenames1.configure(highlightcolor="black")
        self.ckb_verify_basenames1.configure(justify=LEFT)
        self.ckb_verify_basenames1.configure(takefocus="0")
        self.ckb_verify_basenames1.configure(text='''Verify basename of grouped or linked images
(complete name except extension must be identical, 
if checked here, but mask below is empty)''')
        self.ckb_verify_basenames1.configure(variable=DamScanGUI_support.ckb_verify_basenames)

        self.lbl_ack_pairs_file_name1 = Label(self.tabs_t1)
        self.lbl_ack_pairs_file_name1.place(relx=0.01, rely=0.65, height=21
                , width=280)
        self.lbl_ack_pairs_file_name1.configure(activebackground="#f9f9f9")
        self.lbl_ack_pairs_file_name1.configure(activeforeground="black")
        self.lbl_ack_pairs_file_name1.configure(anchor=W)
        self.lbl_ack_pairs_file_name1.configure(background="#d9d9d9")
        self.lbl_ack_pairs_file_name1.configure(disabledforeground="#a3a3a3")
        self.lbl_ack_pairs_file_name1.configure(foreground="#000000")
        self.lbl_ack_pairs_file_name1.configure(highlightbackground="#d9d9d9")
        self.lbl_ack_pairs_file_name1.configure(highlightcolor="black")
        self.lbl_ack_pairs_file_name1.configure(justify=LEFT)
        self.lbl_ack_pairs_file_name1.configure(text='''List of Acknowledged Differences to be ignored''')

        self.lbl_Program_to_Analyse_Groups_or_links1 = Label(self.tabs_t1)
        self.lbl_Program_to_Analyse_Groups_or_links1.place(relx=0.01, rely=0.78
                , height=20, width=190)
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(activebackground="#f9f9f9")
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(activeforeground="black")
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(anchor=W)
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(background="#d9d9d9")
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(disabledforeground="#a3a3a3")
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(foreground="#000000")
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(highlightbackground="#d9d9d9")
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(highlightcolor="black")
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(justify=LEFT)
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(text='''Program to Scan a Single Catalog''')

        self.lblexcfile_name1 = Label(self.tabs_t1)
        self.lblexcfile_name1.place(relx=0.01, rely=0.44, height=20, width=280)
        self.lblexcfile_name1.configure(activebackground="#f9f9f9")
        self.lblexcfile_name1.configure(activeforeground="black")
        self.lblexcfile_name1.configure(anchor=W)
        self.lblexcfile_name1.configure(background="#d9d9d9")
        self.lblexcfile_name1.configure(disabledforeground="#a3a3a3")
        self.lblexcfile_name1.configure(foreground="#000000")
        self.lblexcfile_name1.configure(highlightbackground="#d9d9d9")
        self.lblexcfile_name1.configure(highlightcolor="black")
        self.lblexcfile_name1.configure(justify=LEFT)
        self.lblexcfile_name1.configure(text='''List of Tag Values to be Excluded from Comparison''')

        self.lbl_only_file_name1 = Label(self.tabs_t1)
        self.lbl_only_file_name1.place(relx=0.01, rely=0.54, height=20
                , width=280)
        self.lbl_only_file_name1.configure(activebackground="#f9f9f9")
        self.lbl_only_file_name1.configure(activeforeground="black")
        self.lbl_only_file_name1.configure(anchor=W)
        self.lbl_only_file_name1.configure(background="#d9d9d9")
        self.lbl_only_file_name1.configure(disabledforeground="#a3a3a3")
        self.lbl_only_file_name1.configure(foreground="#000000")
        self.lbl_only_file_name1.configure(highlightbackground="#d9d9d9")
        self.lbl_only_file_name1.configure(highlightcolor="black")
        self.lbl_only_file_name1.configure(justify=LEFT)
        self.lbl_only_file_name1.configure(text='''List of Tag Values ONLY for Comparison''')

        self.txt_basename2 = Entry(self.tabs_t1)
        self.txt_basename2.place(relx=0.48, rely=0.27, relheight=0.07
                , relwidth=0.5)
        self.txt_basename2.configure(background="white")
        self.txt_basename2.configure(disabledforeground="#a3a3a3")
        self.txt_basename2.configure(font=font10)
        self.txt_basename2.configure(foreground="#000000")
        self.txt_basename2.configure(highlightbackground="#d9d9d9")
        self.txt_basename2.configure(highlightcolor="black")
        self.txt_basename2.configure(insertbackground="black")
        self.txt_basename2.configure(selectbackground="#c4c4c4")
        self.txt_basename2.configure(selectforeground="black")
        self.txt_basename2.configure(textvariable=DamScanGUI_support.txt_basename)

        self.lbl_exfile = Entry(self.tabs_t1)
        self.lbl_exfile.place(relx=0.45, rely=0.44, relheight=0.07
                , relwidth=0.51)
        self.lbl_exfile.configure(background="white")
        self.lbl_exfile.configure(disabledforeground="#a3a3a3")
        self.lbl_exfile.configure(font=font10)
        self.lbl_exfile.configure(foreground="#000000")
        self.lbl_exfile.configure(highlightbackground="#d9d9d9")
        self.lbl_exfile.configure(highlightcolor="black")
        self.lbl_exfile.configure(insertbackground="black")
        self.lbl_exfile.configure(selectbackground="#c4c4c4")
        self.lbl_exfile.configure(selectforeground="black")
        self.lbl_exfile.configure(textvariable=DamScanGUI_support.txt_exfile)

        self.txt_onlyfile1 = Entry(self.tabs_t1)
        self.txt_onlyfile1.place(relx=0.45, rely=0.54, relheight=0.07
                , relwidth=0.51)
        self.txt_onlyfile1.configure(background="white")
        self.txt_onlyfile1.configure(disabledforeground="#a3a3a3")
        self.txt_onlyfile1.configure(font=font10)
        self.txt_onlyfile1.configure(foreground="#000000")
        self.txt_onlyfile1.configure(highlightbackground="#d9d9d9")
        self.txt_onlyfile1.configure(highlightcolor="black")
        self.txt_onlyfile1.configure(insertbackground="black")
        self.txt_onlyfile1.configure(selectbackground="#c4c4c4")
        self.txt_onlyfile1.configure(selectforeground="black")
        self.txt_onlyfile1.configure(textvariable=DamScanGUI_support.txt_onlyfile)

        self.txt_ack_pairs1 = Entry(self.tabs_t1)
        self.txt_ack_pairs1.place(relx=0.45, rely=0.65, relheight=0.07
                , relwidth=0.51)
        self.txt_ack_pairs1.configure(background="white")
        self.txt_ack_pairs1.configure(disabledforeground="#a3a3a3")
        self.txt_ack_pairs1.configure(font=font10)
        self.txt_ack_pairs1.configure(foreground="#000000")
        self.txt_ack_pairs1.configure(highlightbackground="#d9d9d9")
        self.txt_ack_pairs1.configure(highlightcolor="black")
        self.txt_ack_pairs1.configure(insertbackground="black")
        self.txt_ack_pairs1.configure(selectbackground="#c4c4c4")
        self.txt_ack_pairs1.configure(selectforeground="black")
        self.txt_ack_pairs1.configure(textvariable=DamScanGUI_support.txt_ack_pairs)

        self.txt_damscanpgm1 = Entry(self.tabs_t1)
        self.txt_damscanpgm1.place(relx=0.3, rely=0.78, relheight=0.07, width=470) # !!
        self.txt_damscanpgm1.configure(background="#d9d9d9")
        self.txt_damscanpgm1.configure(disabledforeground="#a3a3a3")
        self.txt_damscanpgm1.configure(font=font12)
        self.txt_damscanpgm1.configure(foreground="#000000")
        self.txt_damscanpgm1.configure(highlightbackground="#d9d9d9")
        self.txt_damscanpgm1.configure(highlightcolor="black")
        self.txt_damscanpgm1.configure(insertbackground="black")
        self.txt_damscanpgm1.configure(justify=LEFT)
        self.txt_damscanpgm1.configure(selectbackground="#c4c4c4")
        self.txt_damscanpgm1.configure(selectforeground="black")
        self.txt_damscanpgm1.configure(relief=FLAT)
        self.txt_damscanpgm1.configure(textvariable=DamScanGUI_support.txt_damscanpgm)

        self.btn_show_version_of_damscan_py = Button(self.tabs_t1)
        self.btn_show_version_of_damscan_py.place(relx=0.0, y=260, height=25, width=140)
        self.btn_show_version_of_damscan_py.configure(activebackground="#d9d9d9")
        self.btn_show_version_of_damscan_py.configure(activeforeground="#000000")
        self.btn_show_version_of_damscan_py.configure(background="#d9d9d9")
        self.btn_show_version_of_damscan_py.configure(command=DamScanGUI_support.show_version_of_damscan_py)
        self.btn_show_version_of_damscan_py.configure(disabledforeground="#a3a3a3")
        self.btn_show_version_of_damscan_py.configure(foreground="#000000")
        self.btn_show_version_of_damscan_py.configure(highlightbackground="#d9d9d9")
        self.btn_show_version_of_damscan_py.configure(highlightcolor="black")
        self.btn_show_version_of_damscan_py.configure(pady="0")
        self.btn_show_version_of_damscan_py.configure(takefocus="0")
        self.btn_show_version_of_damscan_py.configure(text='''Show Program Version''')

        self.btn_show_cmd_str_scan = Button(self.tabs_t1)
        self.btn_show_cmd_str_scan.place(relx=0.21, y=260, height=25, width=150)
        self.btn_show_cmd_str_scan.configure(activebackground="#d9d9d9")
        self.btn_show_cmd_str_scan.configure(activeforeground="#000000")
        self.btn_show_cmd_str_scan.configure(background="#d9d9d9")
        self.btn_show_cmd_str_scan.configure(command=DamScanGUI_support.show_cmd_str_scan)
        self.btn_show_cmd_str_scan.configure(disabledforeground="#a3a3a3")
        self.btn_show_cmd_str_scan.configure(foreground="#000000")
        self.btn_show_cmd_str_scan.configure(highlightbackground="#d9d9d9")
        self.btn_show_cmd_str_scan.configure(highlightcolor="black")
        self.btn_show_cmd_str_scan.configure(pady="0")
        self.btn_show_cmd_str_scan.configure(takefocus="0")
        self.btn_show_cmd_str_scan.configure(text='''Show Command String''')

        self.btn_run_analysis_no_save1 = Button(self.tabs_t1)
        self.btn_run_analysis_no_save1.place(relx=0.43, y=260, height=25, width=180)
        self.btn_run_analysis_no_save1.configure(activebackground="#d9d9d9")
        self.btn_run_analysis_no_save1.configure(activeforeground="#000000")
        self.btn_run_analysis_no_save1.configure(background="#d9d9d9")
        self.btn_run_analysis_no_save1.configure(command=DamScanGUI_support.run_analysis_no_save)
        self.btn_run_analysis_no_save1.configure(disabledforeground="#a3a3a3")
        self.btn_run_analysis_no_save1.configure(foreground="#000000")
        self.btn_run_analysis_no_save1.configure(highlightbackground="#d9d9d9")
        self.btn_run_analysis_no_save1.configure(highlightcolor="black")
        self.btn_run_analysis_no_save1.configure(pady="0")
        self.btn_run_analysis_no_save1.configure(takefocus="0")
        self.btn_run_analysis_no_save1.configure(text='''Analyze 1 Catalog (no save)''')
        self.btn_run_analysis_no_save1.configure(underline="0")

        self.btn_run_analysis1 = Button(self.tabs_t1)
        self.btn_run_analysis1.place(relx=0.69, y=260, height=25, width=220)
        self.btn_run_analysis1.configure(activebackground="#d9d9d9")
        self.btn_run_analysis1.configure(activeforeground="#000000")
        self.btn_run_analysis1.configure(background="#d9d9d9")
        self.btn_run_analysis1.configure(command=DamScanGUI_support.run_analysis)
        self.btn_run_analysis1.configure(disabledforeground="#a3a3a3")
        self.btn_run_analysis1.configure(font=font12)
        self.btn_run_analysis1.configure(foreground="#000000")
        self.btn_run_analysis1.configure(highlightbackground="#d9d9d9")
        self.btn_run_analysis1.configure(highlightcolor="black")
        self.btn_run_analysis1.configure(pady="0")
        self.btn_run_analysis1.configure(takefocus="0")
        self.btn_run_analysis1.configure(text='''Save Options & Analyze One Catalog''')
        self.btn_run_analysis1.configure(underline="5")

        self.btn_browse_for_acknowledged_list = Button(self.tabs_t1)
        self.btn_browse_for_acknowledged_list.place(relx=0.96, rely=0.65
                , height=20, width=20)
        self.btn_browse_for_acknowledged_list.configure(activebackground="#d9d9d9")
        self.btn_browse_for_acknowledged_list.configure(activeforeground="#000000")
        self.btn_browse_for_acknowledged_list.configure(background="#d9d9d9")
        self.btn_browse_for_acknowledged_list.configure(command=DamScanGUI_support.browse_for_acknowledged_list)
        self.btn_browse_for_acknowledged_list.configure(disabledforeground="#a3a3a3")
        self.btn_browse_for_acknowledged_list.configure(foreground="#000000")
        self.btn_browse_for_acknowledged_list.configure(highlightbackground="#d9d9d9")
        self.btn_browse_for_acknowledged_list.configure(highlightcolor="black")
        self.btn_browse_for_acknowledged_list.configure(pady="0")
        self.btn_browse_for_acknowledged_list.configure(text='''Fldr''')
        self.btn_browse_for_acknowledged_list.configure(width=20)
        self.btn_browse_for_acknowledged_list.configure(image=self.openfold_gif)            # Icon !!!

        self.btn_browse_only_tag_value_lists = Button(self.tabs_t1)
        self.btn_browse_only_tag_value_lists.place(relx=0.96, rely=0.54
                , height=20, width=20)
        self.btn_browse_only_tag_value_lists.configure(activebackground="#d9d9d9")
        self.btn_browse_only_tag_value_lists.configure(activeforeground="#000000")
        self.btn_browse_only_tag_value_lists.configure(background="#d9d9d9")
        self.btn_browse_only_tag_value_lists.configure(command=DamScanGUI_support.browse_for_only_tag_value_lists)
        self.btn_browse_only_tag_value_lists.configure(disabledforeground="#a3a3a3")
        self.btn_browse_only_tag_value_lists.configure(foreground="#000000")
        self.btn_browse_only_tag_value_lists.configure(highlightbackground="#d9d9d9")
        self.btn_browse_only_tag_value_lists.configure(highlightcolor="black")
        self.btn_browse_only_tag_value_lists.configure(pady="0")
        self.btn_browse_only_tag_value_lists.configure(text='''Fldr''')
        self.btn_browse_only_tag_value_lists.configure(image=self.openfold_gif)            # Icon !!!
        self.btn_browse_only_tag_value_lists.configure(width=20)

        self.btn_browse_for_excluded_tag_value_lists = Button(self.tabs_t1)
        self.btn_browse_for_excluded_tag_value_lists.place(relx=0.96, rely=0.44
                , height=20, width=20)
        self.btn_browse_for_excluded_tag_value_lists.configure(activebackground="#d9d9d9")
        self.btn_browse_for_excluded_tag_value_lists.configure(activeforeground="#000000")
        self.btn_browse_for_excluded_tag_value_lists.configure(background="#d9d9d9")
        self.btn_browse_for_excluded_tag_value_lists.configure(command=DamScanGUI_support.browse_for_excluded_tag_value_lists)
        self.btn_browse_for_excluded_tag_value_lists.configure(disabledforeground="#a3a3a3")
        self.btn_browse_for_excluded_tag_value_lists.configure(foreground="#000000")
        self.btn_browse_for_excluded_tag_value_lists.configure(highlightbackground="#d9d9d9")
        self.btn_browse_for_excluded_tag_value_lists.configure(highlightcolor="black")
        self.btn_browse_for_excluded_tag_value_lists.configure(pady="0")
        self.btn_browse_for_excluded_tag_value_lists.configure(text='''Fldr''')
        self.btn_browse_for_excluded_tag_value_lists.configure(image=self.openfold_gif)            # Icon !!!

        self.btn_edit_ack_file = Button(self.tabs_t1)
        self.btn_edit_ack_file.place(relx=0.41, rely=0.65, height=20, width=25)
        self.btn_edit_ack_file.configure(activebackground="#d9d9d9")
        self.btn_edit_ack_file.configure(activeforeground="#000000")
        self.btn_edit_ack_file.configure(background="#d9d9d9")
        self.btn_edit_ack_file.configure(command=DamScanGUI_support.edit_ack_file)
        self.btn_edit_ack_file.configure(disabledforeground="#a3a3a3")
        self.btn_edit_ack_file.configure(foreground="#000000")
        self.btn_edit_ack_file.configure(highlightbackground="#d9d9d9")
        self.btn_edit_ack_file.configure(highlightcolor="black")
        self.btn_edit_ack_file.configure(pady="0")
        self.btn_edit_ack_file.configure(text='''Edit''')

        self.edit_only_file = Button(self.tabs_t1)
        self.edit_only_file.place(relx=0.41, rely=0.54, height=20, width=25)
        self.edit_only_file.configure(activebackground="#d9d9d9")
        self.edit_only_file.configure(activeforeground="#000000")
        self.edit_only_file.configure(background="#d9d9d9")
        self.edit_only_file.configure(command=DamScanGUI_support.edit_only_file)
        self.edit_only_file.configure(disabledforeground="#a3a3a3")
        self.edit_only_file.configure(foreground="#000000")
        self.edit_only_file.configure(highlightbackground="#d9d9d9")
        self.edit_only_file.configure(highlightcolor="black")
        self.edit_only_file.configure(pady="0")
        self.edit_only_file.configure(text='''Edit''')

        self.btn_edit_excluded_file = Button(self.tabs_t1)
        self.btn_edit_excluded_file.place(relx=0.41, rely=0.44, height=20
                , width=25)
        self.btn_edit_excluded_file.configure(activebackground="#d9d9d9")
        self.btn_edit_excluded_file.configure(activeforeground="#000000")
        self.btn_edit_excluded_file.configure(background="#d9d9d9")
        self.btn_edit_excluded_file.configure(command=DamScanGUI_support.edit_excluded_file)
        self.btn_edit_excluded_file.configure(disabledforeground="#a3a3a3")
        self.btn_edit_excluded_file.configure(foreground="#000000")
        self.btn_edit_excluded_file.configure(highlightbackground="#d9d9d9")
        self.btn_edit_excluded_file.configure(highlightcolor="black")
        self.btn_edit_excluded_file.configure(pady="0")
        self.btn_edit_excluded_file.configure(text='''Edit''')

        self.rbtn_groups1 = Radiobutton(self.tabs_t1)
        self.rbtn_groups1.place(relx=0.26, rely=0.07, relheight=0.07, relwidth=0.1) # !!
        self.rbtn_groups1.configure(activebackground="#d9d9d9")
        self.rbtn_groups1.configure(activeforeground="#000000")
        self.rbtn_groups1.configure(anchor=W)
        self.rbtn_groups1.configure(background="#d9d9d9")
        self.rbtn_groups1.configure(disabledforeground="#a3a3a3")
        self.rbtn_groups1.configure(foreground="#000000")
        self.rbtn_groups1.configure(highlightbackground="#d9d9d9")
        self.rbtn_groups1.configure(highlightcolor="black")
        self.rbtn_groups1.configure(justify=LEFT)
        self.rbtn_groups1.configure(text='''Groups''')
        self.rbtn_groups1.configure(value="1")
        self.rbtn_groups1.configure(variable=DamScanGUI_support.ckb_group)

        self.rbtn_links1 = Radiobutton(self.tabs_t1)
        self.rbtn_links1.place(relx=0.26, rely=0.24, relheight=0.07
                , relwidth=0.08)
        self.rbtn_links1.configure(activebackground="#d9d9d9")
        self.rbtn_links1.configure(activeforeground="#000000")
        self.rbtn_links1.configure(anchor=W)
        self.rbtn_links1.configure(background="#d9d9d9")
        self.rbtn_links1.configure(disabledforeground="#a3a3a3")
        self.rbtn_links1.configure(foreground="#000000")
        self.rbtn_links1.configure(highlightbackground="#d9d9d9")
        self.rbtn_links1.configure(highlightcolor="black")
        self.rbtn_links1.configure(justify=LEFT)
        self.rbtn_links1.configure(text='''Links''')
        self.rbtn_links1.configure(value="0")
        self.rbtn_links1.configure(variable=DamScanGUI_support.ckb_group)

        self.txt_dbpath2 = Entry(self.tabs_t2)
        self.txt_dbpath2.place(x=170, y=0, height=20, width=270)        # !!! x=220, y=0, height=20, width=270
        self.txt_dbpath2.configure(background="#d9d9d9")
        self.txt_dbpath2.configure(disabledforeground="#a3a3a3")
        self.txt_dbpath2.configure(font=font12)
        self.txt_dbpath2.configure(foreground="#000000")
        self.txt_dbpath2.configure(highlightbackground="#d9d9d9")
        self.txt_dbpath2.configure(highlightcolor="black")
        self.txt_dbpath2.configure(insertbackground="black")
        self.txt_dbpath2.configure(selectbackground="#c4c4c4")
        self.txt_dbpath2.configure(selectforeground="black")
        self.txt_dbpath2.configure(relief=FLAT)                             # !!! relief=FLAT !!!
        self.txt_dbpath2.configure(textvariable=DamScanGUI_support.txt_dbpath2)

        self.txt_dbname2 = Entry(self.tabs_t2)
        self.txt_dbname2.place(x=440, rely=0.0, relheight=0.07, width=240) # !!
        self.txt_dbname2.configure(background="#d9d9d9")
        self.txt_dbname2.configure(disabledforeground="#a3a3a3")
        self.txt_dbname2.configure(font=font14)
        self.txt_dbname2.configure(foreground="#000000")
        self.txt_dbname2.configure(highlightbackground="#d9d9d9")
        self.txt_dbname2.configure(highlightcolor="black")
        self.txt_dbname2.configure(insertbackground="black")
        self.txt_dbname2.configure(justify=RIGHT)
        self.txt_dbname2.configure(relief=FLAT)                             # !!! relief=FLAT !!!
        self.txt_dbname2.configure(selectbackground="#c4c4c4")
        self.txt_dbname2.configure(selectforeground="black")
        self.txt_dbname2.configure(textvariable=DamScanGUI_support.txt_dbname2)

        self.Label_Second_Catalog_Name = Label(self.tabs_t2)
        self.Label_Second_Catalog_Name.place(x=0, y=0, height=20, width=160)    # !! x=0, y=0, height=20, width=200
        self.Label_Second_Catalog_Name.configure(activebackground="#f9f9f9")
        self.Label_Second_Catalog_Name.configure(activeforeground="black")
        self.Label_Second_Catalog_Name.configure(anchor=W)
        self.Label_Second_Catalog_Name.configure(background="#d9d9d9")
        self.Label_Second_Catalog_Name.configure(disabledforeground="#a3a3a3")
        self.Label_Second_Catalog_Name.configure(foreground="#000000")
        self.Label_Second_Catalog_Name.configure(highlightbackground="#d9d9d9")
        self.Label_Second_Catalog_Name.configure(highlightcolor="black")
        self.Label_Second_Catalog_Name.configure(justify=LEFT)
        self.Label_Second_Catalog_Name.configure(text='''Second Catalog to compare:''')

        self.lbl_Program_to_Analyse_Groups_or_links1 = Label(self.tabs_t2)
        self.lbl_Program_to_Analyse_Groups_or_links1.place(relx=0.01, rely=0.78
                , height=20, width=230)
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(activebackground="#f9f9f9")
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(activeforeground="black")
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(anchor=W)
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(background="#d9d9d9")
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(disabledforeground="#a3a3a3")
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(foreground="#000000")
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(highlightbackground="#d9d9d9")
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(highlightcolor="black")
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(justify=LEFT)
        self.lbl_Program_to_Analyse_Groups_or_links1.configure(text='''Program to Compare Two Catalogs:''')

        self.txt_damcompgm = Entry(self.tabs_t2)
        self.txt_damcompgm.place(relx=0.28, rely=0.78, relheight=0.07, relwidth=0.63) # !!
        self.txt_damcompgm.configure(background="#d9d9d9")
        self.txt_damcompgm.configure(disabledforeground="#a3a3a3")
        self.txt_damcompgm.configure(font=font12)
        self.txt_damcompgm.configure(foreground="#000000")
        self.txt_damcompgm.configure(highlightbackground="#d9d9d9")
        self.txt_damcompgm.configure(highlightcolor="black")
        self.txt_damcompgm.configure(insertbackground="black")
        self.txt_damcompgm.configure(justify=LEFT)
        self.txt_damcompgm.configure(relief=FLAT)
        self.txt_damcompgm.configure(selectbackground="#c4c4c4")
        self.txt_damcompgm.configure(selectforeground="black")
        self.txt_damcompgm.configure(textvariable=DamScanGUI_support.txt_damcompgm)

        self.lbl_excl_paths = Label(self.tabs_t2)
        self.lbl_excl_paths.place(relx=0.01, rely=0.37, height=20, width=344)
        self.lbl_excl_paths.configure(activebackground="#f9f9f9")
        self.lbl_excl_paths.configure(activeforeground="black")
        self.lbl_excl_paths.configure(anchor=NW)
        self.lbl_excl_paths.configure(background="#d9d9d9")
        self.lbl_excl_paths.configure(disabledforeground="#a3a3a3")
        self.lbl_excl_paths.configure(foreground="#000000")
        self.lbl_excl_paths.configure(highlightbackground="#d9d9d9")
        self.lbl_excl_paths.configure(highlightcolor="black")
        self.lbl_excl_paths.configure(justify=LEFT)
        self.lbl_excl_paths.configure(text='''List of Paths for Image Files to be EXCLUDED from Comparison''')

        self.txt_excludepaths = Entry(self.tabs_t2)
        self.txt_excludepaths.place(relx=0.01, rely=0.44, relheight=0.07
                , relwidth=0.95)
        self.txt_excludepaths.configure(background="white")
        self.txt_excludepaths.configure(disabledforeground="#a3a3a3")
        self.txt_excludepaths.configure(font=font10)
        self.txt_excludepaths.configure(foreground="#000000")
        self.txt_excludepaths.configure(highlightbackground="#d9d9d9")
        self.txt_excludepaths.configure(highlightcolor="black")
        self.txt_excludepaths.configure(insertbackground="black")
        self.txt_excludepaths.configure(selectbackground="#c4c4c4")
        self.txt_excludepaths.configure(selectforeground="black")
        self.txt_excludepaths.configure(textvariable=DamScanGUI_support.txt_excludepaths)

        self.lbl_excl_only_paths_explanation = Label(self.tabs_t2)
        self.lbl_excl_only_paths_explanation.place(relx=0.01, rely=0.65
                , height=20, width=694)
        self.lbl_excl_only_paths_explanation.configure(activebackground="#f9f9f9")
        self.lbl_excl_only_paths_explanation.configure(activeforeground="black")
        self.lbl_excl_only_paths_explanation.configure(anchor=W)
        self.lbl_excl_only_paths_explanation.configure(background="#d9d9d9")
        self.lbl_excl_only_paths_explanation.configure(disabledforeground="#a3a3a3")
        self.lbl_excl_only_paths_explanation.configure(foreground="#000000")
        self.lbl_excl_only_paths_explanation.configure(highlightbackground="#d9d9d9")
        self.lbl_excl_only_paths_explanation.configure(highlightcolor="black")
        self.lbl_excl_only_paths_explanation.configure(justify=LEFT)
        self.lbl_excl_only_paths_explanation.configure(text='''Paths with embedded spaces should be enclosed with quotes ' or doublequotes " and can be longer than the fields above''')

        self.txt_onlypaths = Entry(self.tabs_t2)
        self.txt_onlypaths.place(relx=0.01, rely=0.58, relheight=0.07
                , relwidth=0.95)
        self.txt_onlypaths.configure(background="white")
        self.txt_onlypaths.configure(disabledforeground="#a3a3a3")
        self.txt_onlypaths.configure(font=font10)
        self.txt_onlypaths.configure(foreground="#000000")
        self.txt_onlypaths.configure(highlightbackground="#d9d9d9")
        self.txt_onlypaths.configure(highlightcolor="black")
        self.txt_onlypaths.configure(insertbackground="black")
        self.txt_onlypaths.configure(selectbackground="#c4c4c4")
        self.txt_onlypaths.configure(selectforeground="black")
        self.txt_onlypaths.configure(textvariable=DamScanGUI_support.txt_onlypaths)

        self.btn_show_version_of_damcompare_pgm = Button(self.tabs_t2)
        self.btn_show_version_of_damcompare_pgm.place(relx=0.0, y=260
                , height=25, width=140)
        self.btn_show_version_of_damcompare_pgm.configure(activebackground="#d9d9d9")
        self.btn_show_version_of_damcompare_pgm.configure(activeforeground="#000000")
        self.btn_show_version_of_damcompare_pgm.configure(background="#d9d9d9")
        self.btn_show_version_of_damcompare_pgm.configure(command=DamScanGUI_support.show_version_of_damcompare_pgm)
        self.btn_show_version_of_damcompare_pgm.configure(disabledforeground="#a3a3a3")
        self.btn_show_version_of_damcompare_pgm.configure(foreground="#000000")
        self.btn_show_version_of_damcompare_pgm.configure(highlightbackground="#d9d9d9")
        self.btn_show_version_of_damcompare_pgm.configure(highlightcolor="black")
        self.btn_show_version_of_damcompare_pgm.configure(pady="0")
        self.btn_show_version_of_damcompare_pgm.configure(takefocus="0")
        self.btn_show_version_of_damcompare_pgm.configure(text='''Show Program Version''')

        self.btn_show_cmd_str_compare = Button(self.tabs_t2)
        self.btn_show_cmd_str_compare.place(relx=0.21, y=260, height=25
                , width=140)
        self.btn_show_cmd_str_compare.configure(activebackground="#d9d9d9")
        self.btn_show_cmd_str_compare.configure(activeforeground="#000000")
        self.btn_show_cmd_str_compare.configure(background="#d9d9d9")
        self.btn_show_cmd_str_compare.configure(command=DamScanGUI_support.show_cmd_str_compare)
        self.btn_show_cmd_str_compare.configure(disabledforeground="#a3a3a3")
        self.btn_show_cmd_str_compare.configure(foreground="#000000")
        self.btn_show_cmd_str_compare.configure(highlightbackground="#d9d9d9")
        self.btn_show_cmd_str_compare.configure(highlightcolor="black")
        self.btn_show_cmd_str_compare.configure(pady="0")
        self.btn_show_cmd_str_compare.configure(takefocus="0")
        self.btn_show_cmd_str_compare.configure(text='''Show Command String''')

        self.btn_run_analysis_no_save_DamCompare = Button(self.tabs_t2)
        self.btn_run_analysis_no_save_DamCompare.place(relx=0.41, y=260
                , height=25, width=190)
        self.btn_run_analysis_no_save_DamCompare.configure(activebackground="#d9d9d9")
        self.btn_run_analysis_no_save_DamCompare.configure(activeforeground="#000000")
        self.btn_run_analysis_no_save_DamCompare.configure(background="#d9d9d9")
        self.btn_run_analysis_no_save_DamCompare.configure(command=DamScanGUI_support.run_damcompare_no_save)
        self.btn_run_analysis_no_save_DamCompare.configure(disabledforeground="#a3a3a3")
        self.btn_run_analysis_no_save_DamCompare.configure(foreground="#000000")
        self.btn_run_analysis_no_save_DamCompare.configure(highlightbackground="#d9d9d9")
        self.btn_run_analysis_no_save_DamCompare.configure(highlightcolor="black")
        self.btn_run_analysis_no_save_DamCompare.configure(pady="0")
        self.btn_run_analysis_no_save_DamCompare.configure(takefocus="0")
        self.btn_run_analysis_no_save_DamCompare.configure(text='''Compare 2 Catalogs (no save)''')
        self.btn_run_analysis_no_save_DamCompare.configure(underline="8")

        self.btn_run_compare_and_save_options = Button(self.tabs_t2)
        self.btn_run_compare_and_save_options.place(relx=0.69, y=260
                , height=25, width=220)
        self.btn_run_compare_and_save_options.configure(activebackground="#d9d9d9")
        self.btn_run_compare_and_save_options.configure(activeforeground="#000000")
        self.btn_run_compare_and_save_options.configure(background="#d9d9d9")
        self.btn_run_compare_and_save_options.configure(command=DamScanGUI_support.run_compare_and_save_options)
        self.btn_run_compare_and_save_options.configure(disabledforeground="#a3a3a3")
        self.btn_run_compare_and_save_options.configure(font=font12)
        self.btn_run_compare_and_save_options.configure(foreground="#000000")
        self.btn_run_compare_and_save_options.configure(highlightbackground="#d9d9d9")
        self.btn_run_compare_and_save_options.configure(highlightcolor="black")
        self.btn_run_compare_and_save_options.configure(pady="0")
        self.btn_run_compare_and_save_options.configure(takefocus="0")
        self.btn_run_compare_and_save_options.configure(text='''Save Options & Compare 2 Catalogs''')
        self.btn_run_compare_and_save_options.configure(underline="16")

        self.btn_browse_dmc_2 = Button(self.tabs_t2)
        self.btn_browse_dmc_2.place(relx=0.96, rely=0.0, height=20, width=20)
        self.btn_browse_dmc_2.configure(activebackground="#d9d9d9")
        self.btn_browse_dmc_2.configure(activeforeground="#000000")
        self.btn_browse_dmc_2.configure(background="#d9d9d9")
        self.btn_browse_dmc_2.configure(command=DamScanGUI_support.browse_dmc_2)
        self.btn_browse_dmc_2.configure(disabledforeground="#a3a3a3")
        self.btn_browse_dmc_2.configure(foreground="#000000")
        self.btn_browse_dmc_2.configure(highlightbackground="#d9d9d9")
        self.btn_browse_dmc_2.configure(highlightcolor="black")
        self.btn_browse_dmc_2.configure(pady="0")
        self.btn_browse_dmc_2.configure(text='''.dmc''')
        self.btn_browse_dmc_2.configure(image=self.openfold_gif)           # Icon!!

        self.btn_browse_excl_paths = Button(self.tabs_t2)
        self.btn_browse_excl_paths.place(relx=0.96, rely=0.44, height=20
                , width=20)
        self.btn_browse_excl_paths.configure(activebackground="#d9d9d9")
        self.btn_browse_excl_paths.configure(activeforeground="#000000")
        self.btn_browse_excl_paths.configure(background="#d9d9d9")
        self.btn_browse_excl_paths.configure(command=DamScanGUI_support.browse_excl_paths)
        self.btn_browse_excl_paths.configure(disabledforeground="#a3a3a3")
        self.btn_browse_excl_paths.configure(foreground="#000000")
        self.btn_browse_excl_paths.configure(highlightbackground="#d9d9d9")
        self.btn_browse_excl_paths.configure(highlightcolor="black")
        self.btn_browse_excl_paths.configure(pady="0")
        self.btn_browse_excl_paths.configure(text='''Fldr''')
        self.btn_browse_excl_paths.configure(image=self.openfold_gif)           # Icon!!

        self.btn_browse_only_paths = Button(self.tabs_t2)
        self.btn_browse_only_paths.place(relx=0.96, rely=0.58, height=20
                , width=20)
        self.btn_browse_only_paths.configure(activebackground="#d9d9d9")
        self.btn_browse_only_paths.configure(activeforeground="#000000")
        self.btn_browse_only_paths.configure(background="#d9d9d9")
        self.btn_browse_only_paths.configure(command=DamScanGUI_support.browse_only_paths)
        self.btn_browse_only_paths.configure(disabledforeground="#a3a3a3")
        self.btn_browse_only_paths.configure(foreground="#000000")
        self.btn_browse_only_paths.configure(highlightbackground="#d9d9d9")
        self.btn_browse_only_paths.configure(highlightcolor="black")
        self.btn_browse_only_paths.configure(pady="0")
        self.btn_browse_only_paths.configure(text='''Fldr''')
        self.btn_browse_only_paths.configure(image=self.openfold_gif)           # Icon !!!

        self.lbl_only_paths = Label(self.tabs_t2)
        self.lbl_only_paths.place(relx=0.01, rely=0.51, height=20, width=344)
        self.lbl_only_paths.configure(activebackground="#f9f9f9")
        self.lbl_only_paths.configure(activeforeground="black")
        self.lbl_only_paths.configure(anchor=NW)
        self.lbl_only_paths.configure(background="#d9d9d9")
        self.lbl_only_paths.configure(disabledforeground="#a3a3a3")
        self.lbl_only_paths.configure(foreground="#000000")
        self.lbl_only_paths.configure(highlightbackground="#d9d9d9")
        self.lbl_only_paths.configure(highlightcolor="black")
        self.lbl_only_paths.configure(justify=LEFT)
        self.lbl_only_paths.configure(text='''List of Paths for those Image Files ONLY to be Considered''')

        self.lbl_catalog_dates1 = Entry(self.tabs_t2)
        self.lbl_catalog_dates1.place(relx=0.3, rely=0.07, height=20, width=470)
        self.lbl_catalog_dates1.configure(background="#d9d9d9")
        self.lbl_catalog_dates1.configure(foreground="#000000")
        self.lbl_catalog_dates1.configure(relief=FLAT)
        self.lbl_catalog_dates1.configure(justify=RIGHT)
        self.lbl_catalog_dates1.configure(textvariable=DamScanGUI_support.txt_catalog2_dates)

        self.sltb_netcatalogs2 = ScrolledListBox(self.tabs_t2)
        self.sltb_netcatalogs2.place(relx=0.6, rely=0.14, relheight=0.26, relwidth=0.39) # !!
        self.sltb_netcatalogs2.configure(background="white")
        self.sltb_netcatalogs2.configure(disabledforeground="#a3a3a3")
        self.sltb_netcatalogs2.configure(font=font10)
        self.sltb_netcatalogs2.configure(foreground="black")
        self.sltb_netcatalogs2.configure(highlightbackground="#d9d9d9")
        self.sltb_netcatalogs2.configure(highlightcolor="#d9d9d9")
        self.sltb_netcatalogs2.configure(selectbackground="#c4c4c4")
        self.sltb_netcatalogs2.configure(selectforeground="black")
        self.sltb_netcatalogs2.configure(width=10)
        self.sltb_netcatalogs2.configure(listvariable=DamScanGUI_support.lst_netcatalogs)
        self.sltb_netcatalogs2.bind('<Double-Button-1>', lambda e: DamScanGUI_support.select_netcatalog2(e))

        self.lbl_select_netcatalog2_and_doubleclick = Label(self.tabs_t2)
        self.lbl_select_netcatalog2_and_doubleclick.place(relx=0.32, rely=0.14
                , height=21, width=204)
        self.lbl_select_netcatalog2_and_doubleclick.configure(activebackground="#f9f9f9")
        self.lbl_select_netcatalog2_and_doubleclick.configure(activeforeground="black")
        self.lbl_select_netcatalog2_and_doubleclick.configure(background="#d9d9d9")
        self.lbl_select_netcatalog2_and_doubleclick.configure(disabledforeground="#d9d9d9")
        self.lbl_select_netcatalog2_and_doubleclick.configure(foreground="#000000")
        self.lbl_select_netcatalog2_and_doubleclick.configure(highlightbackground="#d9d9d9")
        self.lbl_select_netcatalog2_and_doubleclick.configure(highlightcolor="black")
        self.lbl_select_netcatalog2_and_doubleclick.configure(state=DISABLED)
        self.lbl_select_netcatalog2_and_doubleclick.configure(text='''Select Netcatalog and Double Click -->''')
        # self.tabs.bind('<Enter>',lambda e:DamScanGUI_support.select_tab(e))

        self.TSizegrip1 = ttk.Sizegrip(top)
        self.TSizegrip1.place(anchor=SE, relx=1.0, rely=1.0)

        self.rbtn_verbose_gui_0 = ttk.Radiobutton(top)
        self.rbtn_verbose_gui_0.place(relx=0.53, rely=0.96, relwidth=0.11
                , relheight=0.0, height=22)
        self.rbtn_verbose_gui_0.configure(variable=DamScanGUI_support.rbtn_verbose_gui)
        self.rbtn_verbose_gui_0.configure(value="0")
        self.rbtn_verbose_gui_0.configure(takefocus="0")
        self.rbtn_verbose_gui_0.configure(text='''Silent GUI''')

        self.rbtn_verbose_gui_1 = ttk.Radiobutton(top)
        self.rbtn_verbose_gui_1.place(relx=0.65, rely=0.96, relwidth=0.12
                , relheight=0.0, height=22)
        self.rbtn_verbose_gui_1.configure(variable=DamScanGUI_support.rbtn_verbose_gui)
        self.rbtn_verbose_gui_1.configure(takefocus="0")
        self.rbtn_verbose_gui_1.configure(text='''Verbose GUI''')

        self.rbtn_verbose_gui_2 = ttk.Radiobutton(top)
        self.rbtn_verbose_gui_2.place(relx=0.77, rely=0.96, relwidth=0.12
                , relheight=0.0, height=22)
        self.rbtn_verbose_gui_2.configure(variable=DamScanGUI_support.rbtn_verbose_gui)
        self.rbtn_verbose_gui_2.configure(value="2")
        self.rbtn_verbose_gui_2.configure(takefocus="0")
        self.rbtn_verbose_gui_2.configure(text='''Chatty GUI''')

        self.btn_quit_button3 = Button(top)
        self.btn_quit_button3.place(relx=0.89, rely=0.96, height=25, width=60)
        self.btn_quit_button3.configure(activebackground="#d9d9d9")
        self.btn_quit_button3.configure(activeforeground="#000000")
        self.btn_quit_button3.configure(background="#d9d9d9")
        self.btn_quit_button3.configure(command=DamScanGUI_support.quit_button)
        self.btn_quit_button3.configure(disabledforeground="#a3a3a3")
        self.btn_quit_button3.configure(foreground="#000000")
        self.btn_quit_button3.configure(highlightbackground="#d9d9d9")
        self.btn_quit_button3.configure(highlightcolor="black")
        self.btn_quit_button3.configure(pady="0")
        self.btn_quit_button3.configure(takefocus="0")
        self.btn_quit_button3.configure(text='''Quit''')

        self.menubar = Menu(top)
        top.configure(menu = self.menubar)

        self.file = Menu(top,tearoff=0)
        self.menubar.add_cascade(menu=self.file, label="File", underline=0)

        self.file.add_command(command=DamScanGUI_support.browse_ini_files,
                              label="Open Options (.ini file)", accelerator="Ctrl+o", underline=0)

        self.rbtn_analysis_type2 = Radiobutton(top)
        self.rbtn_analysis_type2.place(relx=0.01, rely=0.96, relheight=0.03
                , relwidth=0.3)
        self.rbtn_analysis_type2.configure(activebackground="#d9d9d9")
        self.rbtn_analysis_type2.configure(activeforeground="#000000")
        self.rbtn_analysis_type2.configure(background="#d9d9d9")
        self.rbtn_analysis_type2.configure(command=DamScanGUI_support.toggle_analysis_type)
        self.rbtn_analysis_type2.configure(disabledforeground="#a3a3a3")
        self.rbtn_analysis_type2.configure(foreground="#000000")
        self.rbtn_analysis_type2.configure(highlightbackground="#d9d9d9")
        self.rbtn_analysis_type2.configure(highlightcolor="black")
        self.rbtn_analysis_type2.configure(justify=LEFT)
        self.rbtn_analysis_type2.configure(text='''Scan Links/Groups in Single Catalog''')
        self.rbtn_analysis_type2.configure(underline="0")
        self.rbtn_analysis_type2.configure(value="Scan")
        self.rbtn_analysis_type2.configure(variable=DamScanGUI_support.rbtn_analysis_type)

        self.rbtn_analysis_type_compare2 = Radiobutton(top)
        self.rbtn_analysis_type_compare2.place(relx=0.32, rely=0.96
                , relheight=0.03, relwidth=0.2)
        self.rbtn_analysis_type_compare2.configure(activebackground="#d9d9d9")
        self.rbtn_analysis_type_compare2.configure(activeforeground="#000000")
        self.rbtn_analysis_type_compare2.configure(background="#d9d9d9")
        self.rbtn_analysis_type_compare2.configure(command=DamScanGUI_support.toggle_analysis_type)
        self.rbtn_analysis_type_compare2.configure(disabledforeground="#a3a3a3")
        self.rbtn_analysis_type_compare2.configure(foreground="#000000")
        self.rbtn_analysis_type_compare2.configure(highlightbackground="#d9d9d9")
        self.rbtn_analysis_type_compare2.configure(highlightcolor="black")
        self.rbtn_analysis_type_compare2.configure(justify=LEFT)
        self.rbtn_analysis_type_compare2.configure(text='''Compare Two Catalogs''')
        self.rbtn_analysis_type_compare2.configure(underline="8")
        self.rbtn_analysis_type_compare2.configure(value="Compare")
        self.rbtn_analysis_type_compare2.configure(variable=DamScanGUI_support.rbtn_analysis_type)
        # ToDo Ctrl-? Clear dir lists

        self.rbtn_analysis_type1 = Radiobutton(top)
        self.rbtn_analysis_type1.place(relx=0.0174, rely=0.219, height=16, relwidth=0.4737)
        self.rbtn_analysis_type1.configure(activebackground="#d9d9d9")
        self.rbtn_analysis_type1.configure(activeforeground="#000000")
        self.rbtn_analysis_type1.configure(background="#d9d9d9")
        self.rbtn_analysis_type1.configure(command=DamScanGUI_support.toggle_analysis_type)
        self.rbtn_analysis_type1.configure(disabledforeground="#a3a3a3")
        self.rbtn_analysis_type1.configure(foreground="#000000")
        self.rbtn_analysis_type1.configure(highlightbackground="#d9d9d9")
        self.rbtn_analysis_type1.configure(highlightcolor="black")
        self.rbtn_analysis_type1.configure(justify=LEFT)
        self.rbtn_analysis_type1.configure(text='''Scan Single (Alt+Ctrl+s)''')
        self.rbtn_analysis_type1.configure(underline="0")
        self.rbtn_analysis_type1.configure(value="Scan")
        self.rbtn_analysis_type1.configure(variable=DamScanGUI_support.rbtn_analysis_type)

        self.rbtn_analysis_type_compare1 = Radiobutton(top)
        self.rbtn_analysis_type_compare1.place(relx=0.499, rely=0.219, height=16, relwidth=0.475)
        self.rbtn_analysis_type_compare1.configure(activebackground="#d9d9d9")
        self.rbtn_analysis_type_compare1.configure(activeforeground="#000000")
        self.rbtn_analysis_type_compare1.configure(background="#d9d9d9")
        self.rbtn_analysis_type_compare1.configure(command=DamScanGUI_support.toggle_analysis_type)
        self.rbtn_analysis_type_compare1.configure(disabledforeground="#a3a3a3")
        self.rbtn_analysis_type_compare1.configure(foreground="#000000")
        self.rbtn_analysis_type_compare1.configure(highlightbackground="#d9d9d9")
        self.rbtn_analysis_type_compare1.configure(highlightcolor="black")
        self.rbtn_analysis_type_compare1.configure(justify=LEFT)
        self.rbtn_analysis_type_compare1.configure(text='''Compare Two Catalogs (Alt+Ctrl+t)''')
        self.rbtn_analysis_type_compare1.configure(underline="8")           #!! underline="8"
        self.rbtn_analysis_type_compare1.configure(value="Compare")
        self.rbtn_analysis_type_compare1.configure(variable=DamScanGUI_support.rbtn_analysis_type)

        self.Message1 = Message(top)
        self.Message1.place(relx=0.01, rely=0.17, relheight=0.04, relwidth=0.97)
        self.Message1.configure(anchor=W)
        self.Message1.configure(background="#d9d9d9")
        self.Message1.configure(font=font12)
        self.Message1.configure(foreground="#bc1818")
        self.Message1.configure(highlightbackground="#d9d9d9")
        self.Message1.configure(highlightcolor="#000000")
        self.Message1.configure(justify=LEFT)
        self.Message1.configure(relief=FLAT)
        self.Message1.configure(textvariable=DamScanGUI_support.msg_error)
        self.Message1.configure(width=730)

        self.recent_options = Menu(top,tearoff=0)
        self.file.add_cascade(menu=self.recent_options, label="Recent Options", underline=0)
        self.recent_options.add_checkbutton(variable=DamScanGUI_support.Recent1, label="1.", underline=0)
        self.recent_options.add_radiobutton(value="Recent2", variable=DamScanGUI_support.recent2, label="2.", underline=0)
        self.file.add_separator()
        self.file.add_command(command=DamScanGUI_support.quit_button, label="Quit", underline=0)

        self.debug_gui = Menu(top,tearoff=0)
        self.menubar.add_cascade(menu=self.debug_gui, label="Debug GUI", underline=0)
        self.verbose_gui = Menu(top,tearoff=0)
        self.debug_gui.add_cascade(menu=self.verbose_gui, label="Verbose GUI", underline=0)
        self.verbose_gui.add_radiobutton(value="0", variable=DamScanGUI_support.rbtn_verbose_gui,
                                         label="Silent GUI", underline=0)
        self.verbose_gui.add_radiobutton(value="1", variable=DamScanGUI_support.rbtn_verbose_gui,
                                         label="Verbose GUI", underline=0)
        self.verbose_gui.add_radiobutton(value="2", variable=DamScanGUI_support.rbtn_verbose_gui,
                                         label="Chatty GUI", underline=0)

        # Keybord shortcuts see https://stackoverflow.com/questions/16082243/how-to-bind-ctrl-in-python-tkinter
        top.bind('<Alt-Control-a>', DamScanGUI_support.use_outfile_name_as_ack_file)    # ALt-Control-a does not work!
        top.bind('<Alt-Control-c>', DamScanGUI_support.browse_dmc_2)
        top.bind('<Control-C>', DamScanGUI_support.browse_dmc_1)                    # Shift+Ctrl+C -- Carefull: Ctrl-C = copy!
        top.bind('<Alt-Control-d>', DamScanGUI_support.toggle_display_and_output_file)  #\
        top.bind('<Control-d>', DamScanGUI_support.toggle_display_and_output_file)  #/
        top.bind('<Control-e>', DamScanGUI_support.open_output_file_in_excel)       # ALt-Control-e does not work!
        top.bind('<Alt-Control-f>', DamScanGUI_support.toggle_fullpath)
        top.bind('<Alt-Control-i>', DamScanGUI_support.toggle_item_id)
        top.bind('<Alt-Control-n>', DamScanGUI_support.open_output_file_in_notepad)
        top.bind('<Alt-Control-o>', DamScanGUI_support.select_ini_file)
        top.bind('<Control-o>', DamScanGUI_support.browse_ini_files)               # Ctrl+Shift+O
        top.bind('<Alt-Control-q>', DamScanGUI_support.quit_button)                     #\
        top.bind('<Control-q>', DamScanGUI_support.quit_button)                     #/
        top.bind('<Control-s>', DamScanGUI_support.save_options_to_ini_files)
        top.bind('<Alt-Control-s>', DamScanGUI_support.toggle_analysis_type)            # Select "Scan" (Single Catalog)
        top.bind('<Alt-Control-t>', DamScanGUI_support.toggle_analysis_type)            # Select "Compare" (Two Catalogs)
        top.bind('<Alt-Control-u>', DamScanGUI_support.use_ini_name_as_outfile_name)
        top.bind('<Control-w>', DamScanGUI_support.open_gui_config_in_notepad)
        top.bind('<Control-W>', DamScanGUI_support.open_ini_file_in_notepad)
        top.bind('<Alt-Control-x>', DamScanGUI_support.browse_excl_paths)
        top.bind('<Control-X>', DamScanGUI_support.browse_for_excluded_tag_value_lists) # Ctrl+Shift+X
        top.bind('<Alt-Control-y>', DamScanGUI_support.browse_only_paths)
        top.bind('<Control-Y>', DamScanGUI_support.browse_for_only_tag_value_lists)     # Ctrl+Shift+Y
        top.bind('<Control-Key-1>', DamScanGUI_support.run_analysis_no_save)
        top.bind('<Alt-Key-1>', DamScanGUI_support.run_analysis_no_save)
        top.bind('<Control-Key-2>', DamScanGUI_support.run_damcompare_no_save)
        top.bind('<Alt-Key-2>', DamScanGUI_support.run_compare_and_save_options)

# The following code is added to facilitate the Scrolled widgets you specified.
class AutoScroll(object):
    '''Configure the scrollbars for a widget.'''

    def __init__(self, master):
        #  Rozen. Added the try-except clauses so that this class
        #  could be used for scrolled entry widget for which vertical
        #  scrolling is not supported. 5/7/14.
        try:
            vsb = ttk.Scrollbar(master, orient='vertical', command=self.yview)
        except:
            pass
        hsb = ttk.Scrollbar(master, orient='horizontal', command=self.xview)

        # self.configure(yscrollcommand=_autoscroll(vsb),
        #    xscrollcommand=_autoscroll(hsb))
        try:
            self.configure(yscrollcommand=self._autoscroll(vsb))
        except:
            pass
        self.configure(xscrollcommand=self._autoscroll(hsb))

        self.grid(column=0, row=0, sticky='nsew')
        try:
            vsb.grid(column=1, row=0, sticky='ns')
        except:
            pass
        hsb.grid(column=0, row=1, sticky='ew')

        master.grid_columnconfigure(0, weight=1)
        master.grid_rowconfigure(0, weight=1)

        # Copy geometry methods of master  (taken from ScrolledText.py)
        methods = Pack.__dict__.keys() | Grid.__dict__.keys() | Place.__dict__.keys()

        for meth in methods:
            if meth[0] != '_' and meth not in ('config', 'configure'):
                setattr(self, meth, getattr(master, meth))

    @staticmethod
    def _autoscroll(sbar):
        '''Hide and show scrollbar as needed.'''

        def wrapped(first, last):
            first, last = float(first), float(last)
            if first <= 0 and last >= 1:
                sbar.grid_remove()
            else:
                sbar.grid()
            sbar.set(first, last)

        return wrapped

    def __str__(self):
        return str(self.master)

def _create_container(func):
    '''Creates a ttk Frame with a given master, and use this new frame to
    place the scrollbars and the widget.'''

    def wrapped(cls, master, **kw):
        container = ttk.Frame(master)
        return func(cls, container, **kw)

    return wrapped

class ScrolledListBox(AutoScroll, Listbox):
    '''A standard Tkinter Text widget with scrollbars that will
    automatically show/hide as needed.'''

    @_create_container
    def __init__(self, master, **kw):
        Listbox.__init__(self, master, **kw)
        AutoScroll.__init__(self, master)

if __name__ == '__main__':
    vp_start_gui()